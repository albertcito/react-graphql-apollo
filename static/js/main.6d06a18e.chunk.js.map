{"version":3,"sources":["../node_modules/validatorjs/src/lang sync /^/.//.*$","util/Storage.tsx","graphql/generated.ts","use/user/UserContext.tsx","use/global/useIntl/index.tsx","use/global/useSession.tsx","use/global/public/index.tsx","use/global/useGlobal.tsx","use/global/GlobalContext.tsx","templates/global/ui/Footer.tsx","templates/global/ui/Header.tsx","templates/global/index.tsx","ui/User/UserAvatar/index.tsx","ui/User/UserTitle/index.tsx","ui/Alert/AlertError.tsx","pages/Admin/Profile/Forms/Email/Form.tsx","pages/Admin/Profile/Forms/Email/index.tsx","rules/password.tsx","rules/required.tsx","pages/Admin/Profile/Forms/Password/Form.tsx","pages/Admin/Profile/Forms/Password/index.tsx","pages/Admin/Profile/Forms/BasicForm/Form.tsx","pages/Admin/Profile/Forms/BasicForm/index.tsx","pages/Admin/Profile/ProfileView.tsx","pages/Admin/Profile/index.tsx","util/columns/base/TableColumns.tsx","util/columns/IDColumn.tsx","ui/Buttons/ConfirmDelete/index.tsx","util/columns/DeleteColumn.tsx","util/columns/StringColumn.tsx","util/columns/TextColumn.tsx","util/columns/OnSelectColumn.tsx","ui/Pagination/index.tsx","ui/Users/Table/index.tsx","ui/NoDataUrql/index.tsx","pages/Admin/Users/index.tsx","pages/Admin/Users/User/Menu/index.tsx","pages/Admin/Users/User/ui/Roles/verifyRolesUser.ts","pages/Admin/Users/User/ui/Roles/UserRolesForm.tsx","pages/Admin/Users/User/config.ts","util/stateHandler/struct/index.tsx","pages/Admin/Users/User/ui/Roles/index.tsx","pages/Admin/Users/User/ui/Forms/BasicForm/index.tsx","pages/Admin/Users/User/ui/Forms/Email/Form.tsx","pages/Admin/Users/User/ui/Forms/Email/index.tsx","pages/Admin/Users/User/ui/Forms/Password/Form.tsx","pages/Admin/Users/User/ui/Forms/Password/index.tsx","pages/Admin/Users/User/ui/Forms/index.tsx","pages/Admin/Users/User/UserContent.tsx","pages/Admin/Users/User/index.tsx","util/columns/Langs/AvailableIcon.tsx","util/columns/Langs/LangColumn.tsx","ui/Translation/Table/index.tsx","routes/routeTypes.tsx","util/columns/Langs/LangsColumn.tsx","ui/Buttons/ButtonLink/index.tsx","pages/Admin/Translations/index.tsx","pages/Admin/Translations/Translation/Form/TranslationForm.tsx","routes/private/admin.tsx","routes/private/index.tsx","pages/Admin/Translations/Translation/Add/index.tsx","pages/Admin/Translations/Translation/index.tsx","pages/Index/Private/index.tsx","pages/Index/Public/index.tsx","pages/Index/index.tsx","pages/AboutMe/index.tsx","routes/public/index.tsx","pages/Login/LoginForm/index.tsx","routes/session.tsx","pages/Login/index.tsx","routes/index.tsx","templates/errors/Exception/error500.svg","templates/errors/Exception/error404.svg","templates/errors/Exception/config.ts","templates/errors/Exception/error403.svg","templates/errors/Exception/index.tsx","templates/errors/Error404.tsx","templates/errors/Error403.tsx","start/Auth.tsx","start/Routes.tsx","config/constants.tsx","start/urql/cacheExchange.ts","start/urql/getURQLClient.ts","start/StartApp.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","StorageItems","RolesEnum","UserStatusEnum","MessageType","accessToken","userID","langID","localStorage","getItem","this","Number","parseInt","undefined","setItem","token","removeItem","LangsDocument","gql","useLangsQuery","options","Urql","query","RolesDocument","TranslationDocument","TranslationCreateDocument","TranslationDeleteDocument","TranslationUpdateDocument","TranslationsDocument","LoggedUserDocument","LoginDocument","LogoutDocument","ProfileBasicUpdateDocument","ProfileUpdateEmailDocument","ProfileUpdatePasswordDocument","UserBasicUpdateDocument","UserUpdateEmailDocument","UserUpdatePasswordDocument","UserRolesUpdateDocument","UserDocument","UsersDocument","LangEnum","createContext","useSession","setUser","useContext","UserContext","saveSession","useCallback","data","storage","setUserID","setToken","fetching","getLoggedUser","getSession","a","response","loggedUser","delSession","logout","getLang","localLanguage","defaultValue","lang","EN","messages","translationsEN","ES","translationsES","useIntl","getLangID","browserLang","navigator","language","split","getLocalLanguage","defaultState","defaultLocale","useState","intl","setIntl","setLang","newLang","setLangID","localLang","state","langs","name","localName","active","isBlocked","useGlobal","sessions","loadingLogout","logoutError","error","loadingLogin","loginError","login","doLogin","email","password","user","langID_","useEffect","getToken","doLogout","then","GlobalContext","Footer","className","href","target","rel","title","Header","afixClass","setAfixClass","globalMenu","Item","to","signInMenu","onClick","firstName","signOutMenu","onChange","affixed","xs","sm","md","lg","xl","width","height","viewBox","fill","xmlns","d","mode","notification","config","placement","bottom","duration","GlobalLayout","Component","route","UserAvatar","fullName","emailVerified","userStatusID","initials","n","join","classEmail","size","Title","Typography","UserTitle","level","getErrors","graphQLErrors","extensions","extensionError","validationErrors","html","key","errors","htmlErrors","forEach","value","push","entries","message","AlertError","type","showIcon","style","marginBottom","EmailProfileForm","onFinish","spinning","initialValues","rules","required","hasFeedback","autoComplete","placeholder","prefix","InboxOutlined","Password","LockOutlined","htmlType","EmailForm","onSuccess","updateEmail","variables","profileUpdateEmail","rulePass","getFieldValue","field","validator","_","Promise","reject","min","minNumber","PasswordProfileForm","passMinRule","readOnly","display","dependencies","PasswordForm","updatePasword","profileUpdatePassword","UserProfileForm","defaultValues","autoFocus","UserOutlined","disabled","BasicForm","lastName","updateName","profileBasicUpdate","firstName_","lastName_","TabPane","Tabs","ProfileView","setName","setEmail","defaultActiveKey","tab","Email","Profile","TableColumns","columns","column","IDColumn","indexID","orderBy","props","render","sorter","ConfirmDelete","onConfirm","delText","tooltip","newTitle","loading","icon","LoadingOutlined","component","okText","cancelText","DeleteOutlined","DeleteColumn","properties","onDelete","isLoading","index","StringColumn","onSelectLink","getLink","getRender","getRenderButton","getRenderLink","getRenderString","TextColumn","text","OnSelectColumn","onSelect","PaginationLocal","pagination","itemsLabel","scroll","small","total","limit","label","subClass","showTotal","range","current","page","pageSize","perPage","tagName","body","document","getElementsByTagName","scrollIntoView","behavior","goToScroll","UsersTable","users","fetchMore","search","setSearch","tableColumns","append","getColumns","Search","onSearch","enterButton","event","Pagination","dataSource","_pagination","_filters","Array","isArray","order","columnOrder","rowKey","NoDataUrql","Users","setLimit","setPage","setOrder","setOrderBy","useUsersQuery","location","pathname","page_","limit_","search_","order_","UserMenu","view","defaultSelectedKeys","SafetyOutlined","IssuesCloseOutlined","MailOutlined","KeyOutlined","PullRequestOutlined","verifyRolesUser","userRoles","role","length","some","userRole","userViewEnum","UserRolesForm","roles","onSave","reduce","ac","rolesStatus","setRolesStatus","itemLayout","renderItem","actions","defaultChecked","checked","rolesStatus_","struct","item","Meta","description","textAlign","Roles","useRolesQuery","errorRoles","fetchingRoles","dataRoles","updateRoles","values","rolesID","userRolesUpdate","userBasicUpdate","EmailUserForm","email_","userUpdateEmail","PasswordUserForm","userUpdatePassword","UserForms","gutter","UserContent","profile","Forms","User","useUserQuery","match","params","includes","getViewCode","span","AvailableIcon","isAvailable","isSelected","colors","CheckCircleFilled","color","ExclamationCircleFilled","CheckCircleTwoTone","twoToneColor","ExclamationCircleTwoTone","LangColumn","langIDGlobal","texts","originalLangID","isAvaliable","RouteTypeEnum","TranslationsTable","translations","getLangColumns","translation","ButtonLink","link","Translations","useTranslationsQuery","deletingFetching","onDeleteTranslation","translationDelete","TranslationForm","langsTexts","originalText","getTexts","Form","useForm","form","submitEnter","preventDefault","submit","layout","createValues","onFinishInternal","valuePropName","TextArea","rows","autoSize","onKeyDown","routes","exact","path","langsFetching","langsError","creating","updateError","create","onCreate","translationCreate","URL","replace","newUrl","history","useTranslationQuery","updating","creatingError","update","onUpdate","translationUpdate","Index","Paragraph","Private","Public","info","LoginForm","maxWidth","margin","routesTemplate","publicRoutes","template","public","privateRoutes","private","sessionRoutes","session","403","desc","img","404","error404","500","error500","Exception","justify","src","alt","Error403","Auth","Template","reactRouter","logoutLoading","routeType","isSession","Validator","fails","Error404","Layout","Routes","routesTemplates","process","cacheExchange","cacheExchangeURQL","LangPaginationResponse","TranslationPaginationResponse","UserPaginationResponse","updates","Mutation","_result","_arguments","cache","inspectFields","filter","x","fieldName","arguments","invalidate","__typename","onError","status","window","GlobalStatus","global","Provider","locale","urql","createClient","url","constants","fetchOptions","headers","authorization","withCredentials","exchanges","devtoolsExchange","dedupExchange","errorExchange","fetchExchange","getURQLClient","StartApp","useUser","Boolean","hostname","ReactDOM","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.6d06a18e.chunk.js","sourcesContent":["var map = {\n\t\"./ar\": 242,\n\t\"./ar.js\": 242,\n\t\"./az\": 243,\n\t\"./az.js\": 243,\n\t\"./be\": 244,\n\t\"./be.js\": 244,\n\t\"./bg\": 245,\n\t\"./bg.js\": 245,\n\t\"./bs\": 246,\n\t\"./bs.js\": 246,\n\t\"./ca\": 247,\n\t\"./ca.js\": 247,\n\t\"./cs\": 248,\n\t\"./cs.js\": 248,\n\t\"./cy\": 249,\n\t\"./cy.js\": 249,\n\t\"./da\": 250,\n\t\"./da.js\": 250,\n\t\"./de\": 251,\n\t\"./de.js\": 251,\n\t\"./el\": 252,\n\t\"./el.js\": 252,\n\t\"./en\": 192,\n\t\"./en.js\": 192,\n\t\"./es\": 253,\n\t\"./es.js\": 253,\n\t\"./et\": 254,\n\t\"./et.js\": 254,\n\t\"./eu\": 255,\n\t\"./eu.js\": 255,\n\t\"./fa\": 256,\n\t\"./fa.js\": 256,\n\t\"./fi\": 257,\n\t\"./fi.js\": 257,\n\t\"./fr\": 258,\n\t\"./fr.js\": 258,\n\t\"./hr\": 259,\n\t\"./hr.js\": 259,\n\t\"./hu\": 260,\n\t\"./hu.js\": 260,\n\t\"./id\": 261,\n\t\"./id.js\": 261,\n\t\"./it\": 262,\n\t\"./it.js\": 262,\n\t\"./ja\": 263,\n\t\"./ja.js\": 263,\n\t\"./ka\": 264,\n\t\"./ka.js\": 264,\n\t\"./ko\": 265,\n\t\"./ko.js\": 265,\n\t\"./lt\": 266,\n\t\"./lt.js\": 266,\n\t\"./lv\": 267,\n\t\"./lv.js\": 267,\n\t\"./mk\": 268,\n\t\"./mk.js\": 268,\n\t\"./mn\": 269,\n\t\"./mn.js\": 269,\n\t\"./ms\": 270,\n\t\"./ms.js\": 270,\n\t\"./nb_NO\": 271,\n\t\"./nb_NO.js\": 271,\n\t\"./nl\": 272,\n\t\"./nl.js\": 272,\n\t\"./pl\": 273,\n\t\"./pl.js\": 273,\n\t\"./pt\": 274,\n\t\"./pt.js\": 274,\n\t\"./pt_BR\": 275,\n\t\"./pt_BR.js\": 275,\n\t\"./ro\": 276,\n\t\"./ro.js\": 276,\n\t\"./ru\": 277,\n\t\"./ru.js\": 277,\n\t\"./se\": 278,\n\t\"./se.js\": 278,\n\t\"./sl\": 279,\n\t\"./sl.js\": 279,\n\t\"./sq\": 280,\n\t\"./sq.js\": 280,\n\t\"./sr\": 281,\n\t\"./sr.js\": 281,\n\t\"./sv\": 282,\n\t\"./sv.js\": 282,\n\t\"./tr\": 283,\n\t\"./tr.js\": 283,\n\t\"./ua\": 284,\n\t\"./ua.js\": 284,\n\t\"./uk\": 285,\n\t\"./uk.js\": 285,\n\t\"./vi\": 286,\n\t\"./vi.js\": 286,\n\t\"./zh\": 287,\n\t\"./zh.js\": 287,\n\t\"./zh_TW\": 288,\n\t\"./zh_TW.js\": 288\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 505;","export enum StorageItems {\n  accessToken = 'accessToken',\n  userID = 'userID',\n  langID = 'langID',\n}\nclass Storage {\n  private readonly accessToken = StorageItems.accessToken;\n\n  private readonly userID = StorageItems.userID;\n\n  private readonly langID = StorageItems.langID;\n\n  public getUserID(): number | undefined {\n    const userID = localStorage.getItem(this.userID);\n    return userID ? Number.parseInt(userID, 10) : undefined;\n  }\n\n  public setUserID(userID: number) {\n    return localStorage.setItem(this.userID, `${userID}`);\n  }\n\n  public setToken(token: string) {\n    return localStorage.setItem(this.accessToken, token);\n  }\n\n  public getToken(): string {\n    const accessToken = localStorage.getItem(this.accessToken);\n    return accessToken ?? '';\n  }\n\n  public getLangID(): string {\n    const langID = localStorage.getItem(this.langID);\n    return langID ?? '';\n  }\n\n  public setLangID(langID: string) {\n    return localStorage.setItem(this.langID, langID);\n  }\n\n  public logout() {\n    localStorage.removeItem(this.userID);\n    localStorage.removeItem(this.langID);\n    localStorage.removeItem(this.accessToken);\n  }\n}\n\nexport default new Storage();\n","import gql from 'graphql-tag';\nimport * as Urql from 'urql';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n};\n\nexport type BaseDataEntity = {\n  __typename?: 'BaseDataEntity';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n};\n\nexport type VText = {\n  __typename?: 'VText';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: Scalars['String'];\n  text: Scalars['String'];\n  langID: Scalars['String'];\n  translationID: Scalars['Int'];\n  /** Language name */\n  name: Scalars['String'];\n  /** If the current text exist in this language */\n  isAvailable: Scalars['Boolean'];\n  /** If the text does not exist it will be replaced by the text of this language */\n  originalLangID: Scalars['String'];\n  /** Lang table value */\n  active: Scalars['Boolean'];\n  /** Translation status */\n  isBlocked: Scalars['Boolean'];\n  /** Translation code */\n  code: Scalars['String'];\n};\n\nexport type Role = {\n  __typename?: 'Role';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: RolesEnum;\n  nameID: Scalars['Int'];\n  descriptionID?: Maybe<Scalars['Int']>;\n  names: Array<VText>;\n  name: VText;\n  descriptions?: Maybe<Array<VText>>;\n  description?: Maybe<VText>;\n};\n\n\nexport type RoleNameArgs = {\n  langID?: Maybe<Scalars['String']>;\n};\n\n\nexport type RoleDescriptionArgs = {\n  langID?: Maybe<Scalars['String']>;\n};\n\n/** All possible roles */\nexport enum RolesEnum {\n  SuperAdmin = 'superAdmin',\n  Admin = 'admin'\n}\n\nexport type User = {\n  __typename?: 'User';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: Scalars['Int'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n  email: Scalars['String'];\n  emailVerified: Scalars['Boolean'];\n  userStatusID: Scalars['String'];\n  fullName: Scalars['String'];\n  roles: Array<Role>;\n};\n\nexport type OauthAccessToken = {\n  __typename?: 'OauthAccessToken';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: Scalars['Int'];\n  userID: Scalars['Int'];\n  signature: Scalars['String'];\n  token: Scalars['String'];\n  revoked: Scalars['Boolean'];\n};\n\nexport type Lang = {\n  __typename?: 'Lang';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: Scalars['String'];\n  name: Scalars['String'];\n  localname: Scalars['String'];\n  active: Scalars['Boolean'];\n  isBlocked: Scalars['Boolean'];\n};\n\nexport type Text = {\n  __typename?: 'Text';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  text: Scalars['String'];\n  langID: Scalars['String'];\n  translationID: Scalars['Int'];\n};\n\nexport type Translation = {\n  __typename?: 'Translation';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: Scalars['Int'];\n  code: Scalars['String'];\n  isBlocked: Scalars['Boolean'];\n  texts: Array<VText>;\n  text: VText;\n};\n\n\nexport type TranslationTextArgs = {\n  langID?: Maybe<Scalars['String']>;\n};\n\nexport type UserRole = {\n  __typename?: 'UserRole';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: Scalars['Int'];\n};\n\nexport type UserStatus = {\n  __typename?: 'UserStatus';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: UserStatusEnum;\n  nameID: Scalars['Int'];\n  descriptionID?: Maybe<Scalars['Int']>;\n  available: Scalars['Boolean'];\n  names: Array<VText>;\n  name: VText;\n  descriptions?: Maybe<Array<VText>>;\n  description?: Maybe<VText>;\n};\n\n\nexport type UserStatusNameArgs = {\n  langID?: Maybe<Scalars['String']>;\n};\n\n\nexport type UserStatusDescriptionArgs = {\n  langID?: Maybe<Scalars['String']>;\n};\n\n/** All possible user status */\nexport enum UserStatusEnum {\n  Active = 'active',\n  Inactive = 'inactive'\n}\n\nexport type UserStatusReason = {\n  __typename?: 'UserStatusReason';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  userID: Scalars['Int'];\n  userStatusID: UserStatusEnum;\n  reason: Scalars['String'];\n};\n\nexport type UserToken = {\n  __typename?: 'UserToken';\n  createdAt: Scalars['String'];\n  updatedAt: Scalars['String'];\n  createdBy?: Maybe<Scalars['Int']>;\n  updatedBy?: Maybe<Scalars['Int']>;\n  id: Scalars['Int'];\n  userID: Scalars['Int'];\n  token: Scalars['String'];\n  type: Scalars['String'];\n};\n\nexport type MessageField = {\n  __typename?: 'MessageField';\n  type: MessageType;\n  message: Scalars['String'];\n};\n\n/** All possible message types */\nexport enum MessageType {\n  Success = 'success',\n  Info = 'info',\n  Warning = 'warning',\n  Error = 'error'\n}\n\nexport type LangCreateResponse = {\n  __typename?: 'LangCreateResponse';\n  data: Lang;\n  message: MessageField;\n};\n\nexport type Pagination = {\n  __typename?: 'Pagination';\n  length: Scalars['Int'];\n  total: Scalars['Int'];\n  page: Scalars['Int'];\n  limit: Scalars['Int'];\n  from: Scalars['Int'];\n  to: Scalars['Int'];\n};\n\nexport type LangPaginationResponse = {\n  __typename?: 'LangPaginationResponse';\n  data: Array<Lang>;\n  pagination: Pagination;\n};\n\nexport type LangUpdateResponse = {\n  __typename?: 'LangUpdateResponse';\n  data: Lang;\n  message: MessageField;\n};\n\nexport type RolePaginationResponse = {\n  __typename?: 'RolePaginationResponse';\n  data: Array<Role>;\n  pagination: Pagination;\n};\n\nexport type RoleUpdateResponse = {\n  __typename?: 'RoleUpdateResponse';\n  data: Role;\n  message: MessageField;\n};\n\nexport type TranslationCreateResponse = {\n  __typename?: 'TranslationCreateResponse';\n  data: Translation;\n  message: MessageField;\n};\n\nexport type TranslationPaginationResponse = {\n  __typename?: 'TranslationPaginationResponse';\n  data: Array<Translation>;\n  pagination: Pagination;\n};\n\nexport type TranslationUpdateResponse = {\n  __typename?: 'TranslationUpdateResponse';\n  data: Translation;\n  message: MessageField;\n};\n\nexport type LoginResponse = {\n  __typename?: 'LoginResponse';\n  token: Scalars['String'];\n  user: User;\n};\n\nexport type ProfileBasicUpdateResponse = {\n  __typename?: 'ProfileBasicUpdateResponse';\n  data: User;\n  message: MessageField;\n};\n\nexport type ProfileUpdateEmailResponse = {\n  __typename?: 'ProfileUpdateEmailResponse';\n  data: User;\n  message: MessageField;\n};\n\nexport type ProfileUpdatePasswordResponse = {\n  __typename?: 'ProfileUpdatePasswordResponse';\n  data: User;\n  message: MessageField;\n};\n\nexport type UserBasicUpdateResponse = {\n  __typename?: 'UserBasicUpdateResponse';\n  data: User;\n  message: MessageField;\n};\n\nexport type UserUpdateEmailResponse = {\n  __typename?: 'UserUpdateEmailResponse';\n  data: User;\n  message: MessageField;\n};\n\nexport type UserUpdatePasswordResponse = {\n  __typename?: 'UserUpdatePasswordResponse';\n  data: User;\n  message: MessageField;\n};\n\nexport type UserPaginationResponse = {\n  __typename?: 'UserPaginationResponse';\n  data: Array<User>;\n  pagination: Pagination;\n};\n\nexport type TextInputCreate = {\n  text: Scalars['String'];\n  langID: Scalars['String'];\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  lang: Lang;\n  langs: LangPaginationResponse;\n  role: Role;\n  roles: RolePaginationResponse;\n  translation: Translation;\n  translations: TranslationPaginationResponse;\n  user: User;\n  users: UserPaginationResponse;\n};\n\n\nexport type QueryLangArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type QueryLangsArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryRoleArgs = {\n  id: RolesEnum;\n};\n\n\nexport type QueryRolesArgs = {\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryTranslationArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type QueryTranslationsArgs = {\n  langID?: Maybe<Scalars['String']>;\n  search?: Maybe<Scalars['String']>;\n  order?: Maybe<Scalars['String']>;\n  orderBy?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryUserArgs = {\n  id?: Maybe<Scalars['Int']>;\n};\n\n\nexport type QueryUsersArgs = {\n  order?: Maybe<Scalars['String']>;\n  orderBy?: Maybe<Scalars['String']>;\n  search?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n};\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  langCreate: LangCreateResponse;\n  langDelete: Scalars['String'];\n  langUpdate: LangUpdateResponse;\n  roleDelete: Scalars['String'];\n  roleUpdate: RoleUpdateResponse;\n  translationCreate: TranslationCreateResponse;\n  translationDelete: MessageField;\n  translationUpdate: TranslationUpdateResponse;\n  userRolesUpdate: MessageField;\n  activateEmail: Scalars['String'];\n  forgotPassword: Scalars['String'];\n  loggedUser: User;\n  login: LoginResponse;\n  /** Logout from current session */\n  logout: Scalars['String'];\n  profileBasicUpdate: ProfileBasicUpdateResponse;\n  profileUpdateEmail: ProfileUpdateEmailResponse;\n  profileUpdatePassword: ProfileUpdatePasswordResponse;\n  resetPassword: Scalars['String'];\n  signUp: User;\n  userBasicUpdate: UserBasicUpdateResponse;\n  userUpdateEmail: UserUpdateEmailResponse;\n  userUpdatePassword: UserUpdatePasswordResponse;\n  /** Update user status. If it is inactive revoked all oAuth token */\n  userStatusUpdate: MessageField;\n};\n\n\nexport type MutationLangCreateArgs = {\n  isBlocked?: Maybe<Scalars['Boolean']>;\n  active?: Maybe<Scalars['Boolean']>;\n  localname: Scalars['String'];\n  name: Scalars['String'];\n  id: Scalars['String'];\n};\n\n\nexport type MutationLangDeleteArgs = {\n  id: Scalars['String'];\n};\n\n\nexport type MutationLangUpdateArgs = {\n  isBlocked?: Maybe<Scalars['Boolean']>;\n  active?: Maybe<Scalars['Boolean']>;\n  localname: Scalars['String'];\n  name: Scalars['String'];\n  id: Scalars['String'];\n};\n\n\nexport type MutationRoleDeleteArgs = {\n  id: RolesEnum;\n};\n\n\nexport type MutationRoleUpdateArgs = {\n  descriptionID: Scalars['Int'];\n  nameID: Scalars['Int'];\n  id: RolesEnum;\n};\n\n\nexport type MutationTranslationCreateArgs = {\n  isBlocked?: Maybe<Scalars['Boolean']>;\n  code?: Maybe<Scalars['String']>;\n  texts: Array<TextInputCreate>;\n};\n\n\nexport type MutationTranslationDeleteArgs = {\n  id: Scalars['Int'];\n};\n\n\nexport type MutationTranslationUpdateArgs = {\n  isBlocked?: Maybe<Scalars['Boolean']>;\n  code?: Maybe<Scalars['String']>;\n  texts: Array<TextInputCreate>;\n  id: Scalars['Int'];\n};\n\n\nexport type MutationUserRolesUpdateArgs = {\n  userID: Scalars['Int'];\n  rolesID: Array<Scalars['String']>;\n};\n\n\nexport type MutationActivateEmailArgs = {\n  token: Scalars['String'];\n};\n\n\nexport type MutationForgotPasswordArgs = {\n  email: Scalars['String'];\n};\n\n\nexport type MutationLoginArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationProfileBasicUpdateArgs = {\n  lastName: Scalars['String'];\n  firstName: Scalars['String'];\n};\n\n\nexport type MutationProfileUpdateEmailArgs = {\n  password: Scalars['String'];\n  email: Scalars['String'];\n};\n\n\nexport type MutationProfileUpdatePasswordArgs = {\n  newPassword: Scalars['String'];\n  password: Scalars['String'];\n};\n\n\nexport type MutationResetPasswordArgs = {\n  password_confirmation: Scalars['String'];\n  password: Scalars['String'];\n  token: Scalars['String'];\n};\n\n\nexport type MutationSignUpArgs = {\n  password_confirmation: Scalars['String'];\n  password: Scalars['String'];\n  email: Scalars['String'];\n  lastName: Scalars['String'];\n  firstName: Scalars['String'];\n};\n\n\nexport type MutationUserBasicUpdateArgs = {\n  lastName: Scalars['String'];\n  firstName: Scalars['String'];\n  id: Scalars['Int'];\n};\n\n\nexport type MutationUserUpdateEmailArgs = {\n  email: Scalars['String'];\n  id: Scalars['Int'];\n};\n\n\nexport type MutationUserUpdatePasswordArgs = {\n  password: Scalars['String'];\n  id: Scalars['Int'];\n};\n\n\nexport type MutationUserStatusUpdateArgs = {\n  userID: Scalars['Int'];\n  reason: Scalars['String'];\n  userStatusID: Scalars['String'];\n};\n\nexport type LangsQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LangsQuery = (\n  { __typename?: 'Query' }\n  & { langs: (\n    { __typename?: 'LangPaginationResponse' }\n    & { data: Array<(\n      { __typename?: 'Lang' }\n      & Pick<Lang, 'id' | 'localname' | 'name'>\n    )> }\n  ) }\n);\n\nexport type RolesQueryVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type RolesQuery = (\n  { __typename?: 'Query' }\n  & { roles: (\n    { __typename?: 'RolePaginationResponse' }\n    & { pagination: (\n      { __typename?: 'Pagination' }\n      & Pick<Pagination, 'from' | 'to' | 'total' | 'limit' | 'page' | 'length'>\n    ), data: Array<(\n      { __typename?: 'Role' }\n      & Pick<Role, 'id' | 'nameID' | 'descriptionID'>\n      & { name: (\n        { __typename?: 'VText' }\n        & Pick<VText, 'id' | 'text'>\n      ), description?: Maybe<(\n        { __typename?: 'VText' }\n        & Pick<VText, 'id' | 'text'>\n      )> }\n    )> }\n  ) }\n);\n\nexport type TranslationQueryVariables = Exact<{\n  id: Scalars['Int'];\n}>;\n\n\nexport type TranslationQuery = (\n  { __typename?: 'Query' }\n  & { translation: (\n    { __typename?: 'Translation' }\n    & Pick<Translation, 'id' | 'code' | 'isBlocked'>\n    & { texts: Array<(\n      { __typename?: 'VText' }\n      & Pick<VText, 'id' | 'text' | 'langID' | 'originalLangID'>\n    )> }\n  ) }\n);\n\nexport type TranslationCreateMutationVariables = Exact<{\n  texts: Array<TextInputCreate>;\n}>;\n\n\nexport type TranslationCreateMutation = (\n  { __typename?: 'Mutation' }\n  & { translationCreate: (\n    { __typename?: 'TranslationCreateResponse' }\n    & { data: (\n      { __typename?: 'Translation' }\n      & Pick<Translation, 'id' | 'code'>\n      & { texts: Array<(\n        { __typename?: 'VText' }\n        & Pick<VText, 'id' | 'text' | 'langID'>\n      )> }\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type TranslationDeleteMutationVariables = Exact<{\n  id: Scalars['Int'];\n}>;\n\n\nexport type TranslationDeleteMutation = (\n  { __typename?: 'Mutation' }\n  & { translationDelete: (\n    { __typename?: 'MessageField' }\n    & Pick<MessageField, 'message' | 'type'>\n  ) }\n);\n\nexport type TranslationUpdateMutationVariables = Exact<{\n  id: Scalars['Int'];\n  texts: Array<TextInputCreate>;\n  code?: Maybe<Scalars['String']>;\n  isBlocked?: Maybe<Scalars['Boolean']>;\n}>;\n\n\nexport type TranslationUpdateMutation = (\n  { __typename?: 'Mutation' }\n  & { translationUpdate: (\n    { __typename?: 'TranslationUpdateResponse' }\n    & { data: (\n      { __typename?: 'Translation' }\n      & Pick<Translation, 'id' | 'code'>\n      & { texts: Array<(\n        { __typename?: 'VText' }\n        & Pick<VText, 'id' | 'text' | 'langID'>\n      )> }\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type TranslationsQueryVariables = Exact<{\n  order?: Maybe<Scalars['String']>;\n  orderBy?: Maybe<Scalars['String']>;\n  search?: Maybe<Scalars['String']>;\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n  langID?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type TranslationsQuery = (\n  { __typename?: 'Query' }\n  & { translations: (\n    { __typename?: 'TranslationPaginationResponse' }\n    & { pagination: (\n      { __typename?: 'Pagination' }\n      & Pick<Pagination, 'from' | 'to' | 'total' | 'limit' | 'page' | 'length'>\n    ), data: Array<(\n      { __typename?: 'Translation' }\n      & Pick<Translation, 'id' | 'code'>\n      & { texts: Array<(\n        { __typename?: 'VText' }\n        & Pick<VText, 'id' | 'langID' | 'originalLangID'>\n      )>, text: (\n        { __typename?: 'VText' }\n        & Pick<VText, 'id' | 'text' | 'langID' | 'originalLangID'>\n      ) }\n    )> }\n  ) }\n);\n\nexport type LoggedUserMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LoggedUserMutation = (\n  { __typename?: 'Mutation' }\n  & { loggedUser: (\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'firstName' | 'lastName' | 'fullName' | 'emailVerified'>\n  ) }\n);\n\nexport type LoginMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type LoginMutation = (\n  { __typename?: 'Mutation' }\n  & { login: (\n    { __typename?: 'LoginResponse' }\n    & Pick<LoginResponse, 'token'>\n    & { user: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'fullName' | 'email' | 'createdAt' | 'updatedAt' | 'emailVerified'>\n    ) }\n  ) }\n);\n\nexport type LogoutMutationVariables = Exact<{ [key: string]: never; }>;\n\n\nexport type LogoutMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'logout'>\n);\n\nexport type ProfileBasicUpdateMutationVariables = Exact<{\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n}>;\n\n\nexport type ProfileBasicUpdateMutation = (\n  { __typename?: 'Mutation' }\n  & { profileBasicUpdate: (\n    { __typename?: 'ProfileBasicUpdateResponse' }\n    & { data: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'email'>\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type ProfileUpdateEmailMutationVariables = Exact<{\n  email: Scalars['String'];\n  password: Scalars['String'];\n}>;\n\n\nexport type ProfileUpdateEmailMutation = (\n  { __typename?: 'Mutation' }\n  & { profileUpdateEmail: (\n    { __typename?: 'ProfileUpdateEmailResponse' }\n    & { data: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'email'>\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type ProfileUpdatePasswordMutationVariables = Exact<{\n  password: Scalars['String'];\n  newPassword: Scalars['String'];\n}>;\n\n\nexport type ProfileUpdatePasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { profileUpdatePassword: (\n    { __typename?: 'ProfileUpdatePasswordResponse' }\n    & { data: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'email'>\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type UserBasicUpdateMutationVariables = Exact<{\n  id: Scalars['Int'];\n  firstName: Scalars['String'];\n  lastName: Scalars['String'];\n}>;\n\n\nexport type UserBasicUpdateMutation = (\n  { __typename?: 'Mutation' }\n  & { userBasicUpdate: (\n    { __typename?: 'UserBasicUpdateResponse' }\n    & { data: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'email'>\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type UserUpdateEmailMutationVariables = Exact<{\n  id: Scalars['Int'];\n  email: Scalars['String'];\n}>;\n\n\nexport type UserUpdateEmailMutation = (\n  { __typename?: 'Mutation' }\n  & { userUpdateEmail: (\n    { __typename?: 'UserUpdateEmailResponse' }\n    & { data: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'email'>\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type UserUpdatePasswordMutationVariables = Exact<{\n  id: Scalars['Int'];\n  password: Scalars['String'];\n}>;\n\n\nexport type UserUpdatePasswordMutation = (\n  { __typename?: 'Mutation' }\n  & { userUpdatePassword: (\n    { __typename?: 'UserUpdatePasswordResponse' }\n    & { data: (\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'email'>\n    ), message: (\n      { __typename?: 'MessageField' }\n      & Pick<MessageField, 'type' | 'message'>\n    ) }\n  ) }\n);\n\nexport type UserRolesUpdateMutationVariables = Exact<{\n  userID: Scalars['Int'];\n  rolesID: Array<Scalars['String']>;\n}>;\n\n\nexport type UserRolesUpdateMutation = (\n  { __typename?: 'Mutation' }\n  & { userRolesUpdate: (\n    { __typename?: 'MessageField' }\n    & Pick<MessageField, 'message' | 'type'>\n  ) }\n);\n\nexport type UserQueryVariables = Exact<{\n  id: Scalars['Int'];\n}>;\n\n\nexport type UserQuery = (\n  { __typename?: 'Query' }\n  & { user: (\n    { __typename?: 'User' }\n    & Pick<User, 'id' | 'email' | 'firstName' | 'lastName' | 'fullName' | 'createdAt' | 'updatedAt' | 'emailVerified'>\n    & { roles: Array<(\n      { __typename?: 'Role' }\n      & Pick<Role, 'id'>\n    )> }\n  ) }\n);\n\nexport type UsersQueryVariables = Exact<{\n  limit?: Maybe<Scalars['Int']>;\n  page?: Maybe<Scalars['Int']>;\n  orderBy?: Maybe<Scalars['String']>;\n  order?: Maybe<Scalars['String']>;\n  search?: Maybe<Scalars['String']>;\n}>;\n\n\nexport type UsersQuery = (\n  { __typename?: 'Query' }\n  & { users: (\n    { __typename?: 'UserPaginationResponse' }\n    & { pagination: (\n      { __typename?: 'Pagination' }\n      & Pick<Pagination, 'from' | 'to' | 'total' | 'limit' | 'page' | 'length'>\n    ), data: Array<(\n      { __typename?: 'User' }\n      & Pick<User, 'id' | 'firstName' | 'lastName' | 'email' | 'createdAt' | 'updatedAt' | 'emailVerified' | 'fullName'>\n    )> }\n  ) }\n);\n\n\nexport const LangsDocument = gql`\n    query langs {\n  langs {\n    data {\n      id\n      localname\n      name\n    }\n  }\n}\n    `;\n\nexport function useLangsQuery(options: Omit<Urql.UseQueryArgs<LangsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<LangsQuery>({ query: LangsDocument, ...options });\n};\nexport const RolesDocument = gql`\n    query roles {\n  roles {\n    pagination {\n      from\n      to\n      total\n      limit\n      page\n      length\n    }\n    data {\n      id\n      nameID\n      name {\n        id\n        text\n      }\n      description {\n        id\n        text\n      }\n      descriptionID\n    }\n  }\n}\n    `;\n\nexport function useRolesQuery(options: Omit<Urql.UseQueryArgs<RolesQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<RolesQuery>({ query: RolesDocument, ...options });\n};\nexport const TranslationDocument = gql`\n    query translation($id: Int!) {\n  translation(id: $id) {\n    id\n    code\n    isBlocked\n    texts {\n      id\n      text\n      langID\n      originalLangID\n    }\n  }\n}\n    `;\n\nexport function useTranslationQuery(options: Omit<Urql.UseQueryArgs<TranslationQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<TranslationQuery>({ query: TranslationDocument, ...options });\n};\nexport const TranslationCreateDocument = gql`\n    mutation translationCreate($texts: [TextInputCreate!]!) {\n  translationCreate(texts: $texts) {\n    data {\n      id\n      code\n      texts {\n        id\n        text\n        langID\n      }\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useTranslationCreateMutation() {\n  return Urql.useMutation<TranslationCreateMutation, TranslationCreateMutationVariables>(TranslationCreateDocument);\n};\nexport const TranslationDeleteDocument = gql`\n    mutation translationDelete($id: Int!) {\n  translationDelete(id: $id) {\n    message\n    type\n  }\n}\n    `;\n\nexport function useTranslationDeleteMutation() {\n  return Urql.useMutation<TranslationDeleteMutation, TranslationDeleteMutationVariables>(TranslationDeleteDocument);\n};\nexport const TranslationUpdateDocument = gql`\n    mutation translationUpdate($id: Int!, $texts: [TextInputCreate!]!, $code: String, $isBlocked: Boolean) {\n  translationUpdate(id: $id, texts: $texts, code: $code, isBlocked: $isBlocked) {\n    data {\n      id\n      code\n      texts {\n        id\n        text\n        langID\n      }\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useTranslationUpdateMutation() {\n  return Urql.useMutation<TranslationUpdateMutation, TranslationUpdateMutationVariables>(TranslationUpdateDocument);\n};\nexport const TranslationsDocument = gql`\n    query translations($order: String, $orderBy: String, $search: String, $limit: Int, $page: Int, $langID: String) {\n  translations(\n    order: $order\n    orderBy: $orderBy\n    search: $search\n    limit: $limit\n    page: $page\n    langID: $langID\n  ) {\n    pagination {\n      from\n      to\n      total\n      limit\n      page\n      length\n    }\n    data {\n      id\n      code\n      texts {\n        id\n        langID\n        originalLangID\n      }\n      text(langID: $langID) {\n        id\n        text\n        langID\n        originalLangID\n      }\n    }\n  }\n}\n    `;\n\nexport function useTranslationsQuery(options: Omit<Urql.UseQueryArgs<TranslationsQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<TranslationsQuery>({ query: TranslationsDocument, ...options });\n};\nexport const LoggedUserDocument = gql`\n    mutation loggedUser {\n  loggedUser {\n    id\n    email\n    firstName\n    lastName\n    fullName\n    emailVerified\n  }\n}\n    `;\n\nexport function useLoggedUserMutation() {\n  return Urql.useMutation<LoggedUserMutation, LoggedUserMutationVariables>(LoggedUserDocument);\n};\nexport const LoginDocument = gql`\n    mutation login($email: String!, $password: String!) {\n  login(email: $email, password: $password) {\n    user {\n      id\n      firstName\n      lastName\n      fullName\n      email\n      createdAt\n      updatedAt\n      emailVerified\n    }\n    token\n  }\n}\n    `;\n\nexport function useLoginMutation() {\n  return Urql.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument);\n};\nexport const LogoutDocument = gql`\n    mutation logout {\n  logout\n}\n    `;\n\nexport function useLogoutMutation() {\n  return Urql.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument);\n};\nexport const ProfileBasicUpdateDocument = gql`\n    mutation profileBasicUpdate($firstName: String!, $lastName: String!) {\n  profileBasicUpdate(firstName: $firstName, lastName: $lastName) {\n    data {\n      id\n      firstName\n      lastName\n      email\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useProfileBasicUpdateMutation() {\n  return Urql.useMutation<ProfileBasicUpdateMutation, ProfileBasicUpdateMutationVariables>(ProfileBasicUpdateDocument);\n};\nexport const ProfileUpdateEmailDocument = gql`\n    mutation profileUpdateEmail($email: String!, $password: String!) {\n  profileUpdateEmail(email: $email, password: $password) {\n    data {\n      id\n      firstName\n      lastName\n      email\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useProfileUpdateEmailMutation() {\n  return Urql.useMutation<ProfileUpdateEmailMutation, ProfileUpdateEmailMutationVariables>(ProfileUpdateEmailDocument);\n};\nexport const ProfileUpdatePasswordDocument = gql`\n    mutation profileUpdatePassword($password: String!, $newPassword: String!) {\n  profileUpdatePassword(newPassword: $newPassword, password: $password) {\n    data {\n      id\n      firstName\n      lastName\n      email\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useProfileUpdatePasswordMutation() {\n  return Urql.useMutation<ProfileUpdatePasswordMutation, ProfileUpdatePasswordMutationVariables>(ProfileUpdatePasswordDocument);\n};\nexport const UserBasicUpdateDocument = gql`\n    mutation userBasicUpdate($id: Int!, $firstName: String!, $lastName: String!) {\n  userBasicUpdate(id: $id, lastName: $lastName, firstName: $firstName) {\n    data {\n      id\n      firstName\n      lastName\n      email\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useUserBasicUpdateMutation() {\n  return Urql.useMutation<UserBasicUpdateMutation, UserBasicUpdateMutationVariables>(UserBasicUpdateDocument);\n};\nexport const UserUpdateEmailDocument = gql`\n    mutation userUpdateEmail($id: Int!, $email: String!) {\n  userUpdateEmail(id: $id, email: $email) {\n    data {\n      id\n      firstName\n      lastName\n      email\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useUserUpdateEmailMutation() {\n  return Urql.useMutation<UserUpdateEmailMutation, UserUpdateEmailMutationVariables>(UserUpdateEmailDocument);\n};\nexport const UserUpdatePasswordDocument = gql`\n    mutation userUpdatePassword($id: Int!, $password: String!) {\n  userUpdatePassword(id: $id, password: $password) {\n    data {\n      id\n      firstName\n      lastName\n      email\n    }\n    message {\n      type\n      message\n    }\n  }\n}\n    `;\n\nexport function useUserUpdatePasswordMutation() {\n  return Urql.useMutation<UserUpdatePasswordMutation, UserUpdatePasswordMutationVariables>(UserUpdatePasswordDocument);\n};\nexport const UserRolesUpdateDocument = gql`\n    mutation userRolesUpdate($userID: Int!, $rolesID: [String!]!) {\n  userRolesUpdate(userID: $userID, rolesID: $rolesID) {\n    message\n    type\n  }\n}\n    `;\n\nexport function useUserRolesUpdateMutation() {\n  return Urql.useMutation<UserRolesUpdateMutation, UserRolesUpdateMutationVariables>(UserRolesUpdateDocument);\n};\nexport const UserDocument = gql`\n    query user($id: Int!) {\n  user(id: $id) {\n    id\n    email\n    firstName\n    lastName\n    fullName\n    createdAt\n    updatedAt\n    emailVerified\n    roles {\n      id\n    }\n  }\n}\n    `;\n\nexport function useUserQuery(options: Omit<Urql.UseQueryArgs<UserQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<UserQuery>({ query: UserDocument, ...options });\n};\nexport const UsersDocument = gql`\n    query users($limit: Int, $page: Int, $orderBy: String, $order: String, $search: String) {\n  users(\n    limit: $limit\n    page: $page\n    orderBy: $orderBy\n    order: $order\n    search: $search\n  ) {\n    pagination {\n      from\n      to\n      total\n      limit\n      page\n      length\n    }\n    data {\n      id\n      firstName\n      lastName\n      email\n      createdAt\n      updatedAt\n      emailVerified\n      fullName\n    }\n  }\n}\n    `;\n\nexport function useUsersQuery(options: Omit<Urql.UseQueryArgs<UsersQueryVariables>, 'query'> = {}) {\n  return Urql.useQuery<UsersQuery>({ query: UsersDocument, ...options });\n};","import { createContext, useCallback, useState } from 'react';\n\nimport { LoggedUserMutation } from 'graphql/generated';\n\nexport interface UseUserReturn {\n  user?: LoggedUserMutation['loggedUser'];\n  setUser: (user?: LoggedUserMutation['loggedUser']) => void;\n  setEmail: (email: string) => void;\n  setName: (firstName: string, lastName: string) => void;\n}\n\nexport const useUser = (): UseUserReturn => {\n  const [user, setUser] = useState<LoggedUserMutation['loggedUser']>();\n  const setEmail = useCallback((email: string) => {\n    setUser((data) => ({ ...data, email }) as LoggedUserMutation['loggedUser']);\n  }, []);\n  const setName = useCallback((firstName: string, lastName: string) => {\n    setUser((data) => ({\n      ...data,\n      firstName,\n      lastName,\n      fullName: `${firstName} ${lastName}`,\n    }) as LoggedUserMutation['loggedUser']);\n  }, []);\n  return {\n    user,\n    setUser,\n    setEmail,\n    setName,\n  };\n};\n\nexport default createContext({} as UseUserReturn);\n","import { useCallback, useState } from 'react';\nimport { MessageFormatElement } from 'intl-messageformat-parser';\n\nimport storage from 'util/Storage';\nimport { translationsEN, translationsES } from './langs';\n\n// eslint-disable-next-line no-shadow\nexport enum LangEnum {\n  ES= 'ES',\n  EN= 'EN',\n}\n\ninterface LangFormat {\n  lang: LangEnum;\n  messages: Record<string, string> | Record<string, MessageFormatElement[]>;\n}\n\nconst getLang = (localLanguage: string): LangFormat => {\n  const defaultValue = {\n    lang: LangEnum.EN,\n    messages: translationsEN,\n  };\n  switch (localLanguage) {\n    case LangEnum.ES: return {\n      lang: LangEnum.ES,\n      messages: translationsES,\n    };\n    case LangEnum.EN: return defaultValue;\n    default: return defaultValue;\n  }\n};\n\nconst getLocalLanguage = (): LangFormat => {\n  const lang = storage.getLangID();\n  if (lang) { return getLang(lang); }\n  const browserLang = navigator.language.split(/[_-]/)[0];\n  return getLang(browserLang);\n};\n\nexport interface UseIntlFormat {\n  lang: string;\n  messages: Record<string, string> | Record<string, MessageFormatElement[]>;\n  defaultLocale: string;\n  setLang: (lang: LangEnum) => void;\n}\n\nexport default function useIntl(): UseIntlFormat {\n  const lang = getLocalLanguage();\n  const defaultState = {\n    defaultLocale: LangEnum.ES,\n    ...lang,\n  };\n  const [intl, setIntl] = useState(defaultState);\n\n  const setLang = useCallback((newLang: LangEnum) => {\n    storage.setLangID(newLang);\n    const localLang = getLang(newLang);\n    setIntl((state) => ({\n      ...state,\n      ...localLang,\n    }));\n  }, []);\n\n  return {\n    setLang,\n    ...intl,\n  };\n}\n","import { useCallback, useContext } from 'react';\n\nimport storage from 'util/Storage';\nimport { useLoggedUserMutation, LoggedUserMutation } from 'graphql/generated';\nimport UserContext from 'use/user/UserContext';\n\ntype UserSession = LoggedUserMutation['loggedUser'];\n\nexport interface UseSessionProperties {\n  fetching: boolean;\n  getSession: () => void;\n  delSession: () => void;\n  saveSession: (data: UserSession, accessToken?: string) => void;\n}\n\n/**\n * This function is to load and remove the user information\n * in the localStorage and the hook's status\n */\nconst useSession = (): UseSessionProperties => {\n  const { setUser } = useContext(UserContext);\n\n  const saveSession = useCallback((data: UserSession, accessToken?: string) => {\n    storage.setUserID(data.id);\n    setUser(data);\n    if (accessToken) {\n      storage.setToken(accessToken);\n    }\n  }, [setUser]);\n\n  const [{ fetching }, getLoggedUser] = useLoggedUserMutation();\n\n  /**\n   * Get data from the current user logged\n   *\n   * @param userID: number\n   */\n  const getSession = useCallback(async () => {\n    const response = await getLoggedUser();\n    if (response.data) {\n      saveSession(response.data.loggedUser);\n    }\n  }, [getLoggedUser, saveSession]);\n\n  /**\n   * Clean user's private data\n   */\n  const delSession = useCallback((): void => {\n    storage.logout();\n    setUser();\n  }, [setUser]);\n\n  return {\n    getSession,\n    delSession,\n    saveSession,\n    fetching,\n  };\n};\n\nexport default useSession;\n","export interface LangProperties {\n  langID: string;\n  name: string;\n  localName: string;\n  active: boolean;\n  isBlocked: boolean;\n}\n\nexport const langs: LangProperties[] = [\n  {\n    langID: 'ES',\n    name: 'Spanish',\n    localName: 'Espa\\u00F1ol',\n    active: true,\n    isBlocked: true,\n  },\n  {\n    langID: 'EN',\n    name: 'English',\n    localName: 'English',\n    active: true,\n    isBlocked: true,\n  },\n];\n","import { useCallback, useEffect, useState } from 'react';\nimport { CombinedError } from '@urql/core';\n\nimport useSession, { UseSessionProperties } from 'use/global/useSession';\nimport storage from 'util/Storage';\nimport useIntl, { LangEnum, UseIntlFormat } from './useIntl';\nimport { useLoginMutation, useLogoutMutation } from 'graphql/generated';\nimport { LangProperties, langs } from './public';\n\nexport interface UseGlobalProperties {\n  sessions: Omit<UseSessionProperties, 'getSession' >;\n  logout: {\n    doLogout: () => void;\n    fetching: boolean;\n    error?: CombinedError;\n  };\n  login: {\n    doLogin: (email: string, password: string) => void;\n    fetching: boolean;\n    error?: CombinedError;\n  };\n  intl: UseIntlFormat;\n  langs: LangProperties[];\n  langID: string;\n  setLang: (langID: string) => void;\n}\n\nconst useGlobal = (): UseGlobalProperties => {\n  const { getSession, delSession, ...sessions } = useSession();\n  const intl = useIntl();\n  const [langID, setLangID] = useState<string>('EN');\n\n  const [{ fetching: loadingLogout, error: logoutError }, logout] = useLogoutMutation();\n  const doLogout = () => logout().then(() => delSession());\n\n  const [{ fetching: loadingLogin, error: loginError }, login] = useLoginMutation();\n\n  const doLogin = async (email: string, password: string) => {\n    const response = await login({ email, password });\n    if (response.data) {\n      const { user, token } = response.data.login;\n      sessions.saveSession(user, token);\n    }\n  };\n\n  const setLang = useCallback((langID_: string) => {\n    setLangID(langID_);\n    intl.setLang(langID_ as LangEnum);\n    storage.setLangID(langID_);\n  }, [intl]);\n\n  useEffect(() => {\n    if (storage.getToken()) {\n      getSession();\n    }\n  }, [getSession]);\n\n  return {\n    sessions: {\n      ...sessions,\n      delSession,\n    },\n    logout: {\n      doLogout,\n      fetching: loadingLogout,\n      error: logoutError,\n    },\n    login: {\n      doLogin,\n      fetching: loadingLogin,\n      error: loginError,\n    },\n    intl,\n    langs,\n    langID,\n    setLang,\n  };\n};\n\nexport default useGlobal;\n","import { createContext } from 'react';\n\nimport { UseGlobalProperties } from './useGlobal';\n\nconst GlobalContext = createContext({} as UseGlobalProperties);\nexport default GlobalContext;\n","import React from 'react';\n\nexport default function Footer() {\n  return (\n    <footer className='footer'>\n      <div className='content-width'>\n        <span className='logo'>\n          Made with ♥ by\n          {' '}\n          <a\n            href='https://albertcito.com'\n            target='_blank'\n            rel='noopener noreferrer'\n            title='Go to Albert Tjornehoj webpage'\n          >\n            Albert Tjornehoj\n          </a>\n        </span>\n      </div>\n    </footer>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport { Affix, Col, Row, Menu, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { GlobalContext } from 'use/global';\nimport UserContext from 'use/user/UserContext';\n\nexport default function Header() {\n  const { user } = useContext(UserContext);\n  const { logout } = useContext(GlobalContext);\n  const [afixClass, setAfixClass] = useState('');\n\n  const globalMenu = [\n    <Menu.Item key='about-me'>\n      <Link to='/about-me'>\n        About Me\n      </Link>\n    </Menu.Item>,\n  ];\n  const signInMenu = [\n    <Menu.Item key='logout'>\n      <Button\n        className='link-button-menu'\n        onClick={() => logout.doLogout()}\n      >\n        Logout\n      </Button>\n    </Menu.Item>,\n    <Menu.Item key='profile'>\n      <Link to='/admin/profile'>\n        Hello,\n        {' '}\n        {user?.firstName}\n      </Link>\n    </Menu.Item>,\n    <Menu.Item key='users'>\n      <Link to='/admin/users'>\n        Users\n      </Link>\n    </Menu.Item>,\n    <Menu.Item key='translations'>\n      <Link to='/admin/translations'>\n        Translations\n      </Link>\n    </Menu.Item>,\n  ];\n\n  const signOutMenu = [\n    <Menu.Item key='login'>\n      <Link to='/login'>\n        Login\n      </Link>\n    </Menu.Item>,\n  ];\n\n  return (\n    <header className={`header ${afixClass}`}>\n      <Affix onChange={(affixed) => setAfixClass(affixed ? 'afixClass' : '')}>\n        <div className='content-width'>\n          <Row className='menu'>\n            <Col xs={24} sm={8} md={12} lg={8} xl={6} className='header-left'>\n              <Link to='/' className='logo-url'>\n                <svg width='100%' height='100%' viewBox='0 0 998 145' fill='none' xmlns='http://www.w3.org/2000/svg'>\n                  <path\n                    // eslint-disable-next-line max-len\n                    d='M64.672 13.936L103.552 94.288C105.184 97.552 106 100 106 101.632C106 105.088 103.216 108.208 97.648 110.992C94.384 112.624 91.792 113.44 89.872 113.44C88.048 113.44 86.512 113.008 85.264 112.144C84.112 111.28 83.248 110.368 82.672 109.408C82.192 108.448 81.472 107.008 80.512 105.088L73.024 89.536H33.136L25.648 105.088C24.688 107.008 23.92 108.4 23.344 109.264C22.864 110.128 22 111.04 20.752 112C19.6 112.864 18.064 113.296 16.144 113.296C14.32 113.296 11.776 112.48 8.512 110.848C2.944 108.16 0.16 105.088 0.16 101.632C0.16 100 0.976 97.552 2.608 94.288L41.488 13.792C42.544 11.584 44.128 9.80799 46.24 8.46399C48.448 7.11999 50.752 6.44799 53.152 6.44799C58.336 6.44799 62.176 8.94399 64.672 13.936ZM53.008 48.496L43.504 68.224H62.656L53.008 48.496ZM102.417 13.072C102.417 10.864 102.465 9.232 102.561 8.176C102.753 7.024 103.185 5.72799 103.857 4.288C105.201 1.696 108.945 0.399995 115.089 0.399995C120.945 0.399995 124.593 1.696 126.033 4.288C126.801 5.72799 127.233 7.024 127.329 8.176C127.521 9.32799 127.617 11.008 127.617 13.216V79.888C127.617 83.344 127.905 85.552 128.481 86.512C129.057 87.376 130.305 87.808 132.225 87.808C134.241 87.808 135.585 87.904 136.257 88.096C136.929 88.192 137.745 88.576 138.705 89.248C140.625 90.496 141.585 93.904 141.585 99.472C141.585 105.52 140.625 109.216 138.705 110.56C136.209 112.288 130.257 112.576 120.849 111.424C113.457 110.464 108.657 108.016 106.449 104.08C103.761 99.376 102.417 91.888 102.417 81.616V13.072ZM182.502 36.256C191.046 36.256 198.87 40.048 205.974 47.632C213.174 55.216 216.774 64.048 216.774 74.128C216.774 84.112 213.222 92.896 206.118 100.48C199.014 107.968 191.382 111.712 183.222 111.712C175.062 111.712 169.254 109.408 165.798 104.8C165.03 109.504 160.902 111.856 153.414 111.856C147.366 111.856 143.67 110.56 142.326 107.968C141.654 106.528 141.222 105.28 141.03 104.224C140.934 103.072 140.886 101.392 140.886 99.184V13.216C140.886 11.008 140.934 9.37599 141.03 8.32C141.222 7.16799 141.654 5.91999 142.326 4.57599C143.67 1.98399 147.414 0.687991 153.558 0.687991C159.606 0.687991 163.254 1.98399 164.502 4.57599C165.27 6.016 165.702 7.312 165.798 8.46399C165.99 9.52 166.086 11.152 166.086 13.36V43.312C169.926 38.608 175.398 36.256 182.502 36.256ZM169.83 82.768C172.23 85.36 175.206 86.656 178.758 86.656C182.31 86.656 185.334 85.36 187.83 82.768C190.326 80.176 191.574 77.296 191.574 74.128C191.574 70.96 190.422 68.08 188.118 65.488C185.814 62.8 182.742 61.456 178.902 61.456C175.062 61.456 171.99 62.8 169.686 65.488C167.478 68.176 166.374 71.104 166.374 74.272C166.374 77.344 167.526 80.176 169.83 82.768ZM290.617 65.056C290.617 70.912 289.129 75.28 286.153 78.16C283.273 80.944 280.057 82.336 276.505 82.336H242.377C242.377 85.024 243.961 87.28 247.129 89.104C250.297 90.928 253.465 91.84 256.633 91.84C262.201 91.84 266.569 91.264 269.737 90.112L271.321 89.536C273.625 88.48 275.545 87.952 277.081 87.952C280.153 87.952 282.793 90.112 285.001 94.432C286.249 97.024 286.873 99.232 286.873 101.056C286.873 109.6 276.649 113.872 256.201 113.872C249.097 113.872 242.761 112.672 237.193 110.272C231.721 107.776 227.449 104.512 224.377 100.48C218.329 92.704 215.305 84.016 215.305 74.416C215.305 62.32 219.193 52.672 226.969 45.472C234.841 38.176 244.633 34.528 256.345 34.528C269.689 34.528 279.481 39.232 285.721 48.64C288.985 53.632 290.617 59.104 290.617 65.056ZM260.233 69.232C263.881 69.232 265.705 67.696 265.705 64.624C265.705 62.416 264.841 60.64 263.113 59.296C261.481 57.952 259.081 57.28 255.913 57.28C252.841 57.28 249.769 58.576 246.697 61.168C243.625 63.664 242.089 66.352 242.089 69.232H260.233ZM342.924 36.976C344.748 37.552 346.236 38.56 347.388 40C348.636 41.344 349.26 43.552 349.26 46.624C349.26 49.696 348.348 53.056 346.524 56.704C344.7 60.352 342.06 62.176 338.604 62.176C336.876 62.176 335.196 61.792 333.564 61.024C332.028 60.256 329.964 59.872 327.372 59.872C324.78 59.872 322.332 60.784 320.028 62.608C317.82 64.432 316.716 66.64 316.716 69.232V99.472C316.716 101.68 316.62 103.36 316.428 104.512C316.332 105.568 315.9 106.816 315.132 108.256C313.692 110.752 309.948 112 303.9 112C299.292 112 295.98 111.184 293.964 109.552C292.428 108.208 291.564 106.144 291.372 103.36C291.372 102.4 291.372 101.008 291.372 99.184V48.64C291.372 46.432 291.42 44.8 291.516 43.744C291.708 42.592 292.14 41.344 292.812 40C294.156 37.408 297.9 36.112 304.044 36.112C309.804 36.112 313.404 37.216 314.844 39.424C315.9 40.96 316.428 42.544 316.428 44.176C316.908 43.504 317.58 42.688 318.444 41.728C319.404 40.768 321.372 39.472 324.348 37.84C327.324 36.208 329.916 35.392 332.124 35.392C334.428 35.392 336.348 35.536 337.884 35.824C339.42 36.016 341.1 36.4 342.924 36.976ZM392.608 61.6L383.248 61.024V80.896C383.248 83.488 383.632 85.36 384.4 86.512C385.264 87.664 386.8 88.24 389.008 88.24C391.312 88.24 393.04 88.336 394.192 88.528C395.44 88.624 396.736 89.056 398.08 89.824C400.288 91.072 401.392 94.288 401.392 99.472C401.392 105.52 400.048 109.216 397.36 110.56C395.92 111.232 394.624 111.664 393.472 111.856C392.416 111.952 390.832 112 388.72 112C378.736 112 371.152 109.744 365.968 105.232C360.784 100.72 358.192 93.088 358.192 82.336V61.024C356.368 61.312 354.4 61.456 352.288 61.456C350.176 61.456 348.4 60.64 346.96 59.008C345.616 57.376 344.944 54.592 344.944 50.656C344.944 46.72 345.184 43.888 345.664 42.16C346.144 40.336 346.816 39.04 347.68 38.272C349.216 37.024 351.136 36.4 353.44 36.4L358.192 36.976V22.144C358.192 19.936 358.24 18.304 358.336 17.248C358.528 16.192 359.008 15.04 359.776 13.792C361.024 11.392 364.72 10.192 370.864 10.192C377.392 10.192 381.28 11.968 382.528 15.52C383.008 17.056 383.248 19.504 383.248 22.864V36.976C387.472 36.592 390.64 36.4 392.752 36.4C394.96 36.4 396.592 36.496 397.648 36.688C398.8 36.784 400.096 37.216 401.536 37.984C404.032 39.232 405.28 42.928 405.28 49.072C405.28 55.12 403.984 58.816 401.392 60.16C399.952 60.832 398.656 61.264 397.504 61.456C396.448 61.552 394.816 61.6 392.608 61.6Z'\n                    fill='black'\n                  />\n                  <path\n                    // eslint-disable-next-line max-len\n                    d='M411.504 6.304H491.568C494.64 6.304 496.896 6.688 498.336 7.456C499.776 8.128 500.736 9.232 501.216 10.768C501.696 12.304 501.936 14.32 501.936 16.816C501.936 19.312 501.696 21.328 501.216 22.864C500.736 24.304 499.92 25.312 498.768 25.888C497.04 26.752 494.592 27.184 491.424 27.184H463.92V99.616C463.92 101.824 463.824 103.456 463.632 104.512C463.536 105.568 463.104 106.816 462.336 108.256C461.664 109.6 460.416 110.56 458.592 111.136C456.768 111.712 454.368 112 451.392 112C448.416 112 446.016 111.712 444.192 111.136C442.464 110.56 441.216 109.6 440.448 108.256C439.776 106.816 439.344 105.568 439.152 104.512C439.056 103.36 439.008 101.68 439.008 99.472V27.184H411.36C408.288 27.184 406.032 26.848 404.592 26.176C403.152 25.408 402.192 24.256 401.712 22.72C401.232 21.184 400.992 19.168 400.992 16.672C400.992 14.176 401.232 12.208 401.712 10.768C402.192 9.232 403.008 8.17599 404.16 7.6C405.888 6.736 408.336 6.304 411.504 6.304ZM520.576 24.88C518.848 25.36 516.496 25.6 513.52 25.6C510.544 25.6 508.192 25.312 506.464 24.736C504.736 24.16 503.488 23.2 502.72 21.856C502.048 20.416 501.616 19.168 501.424 18.112C501.328 16.96 501.28 15.28 501.28 13.072C501.28 10.864 501.328 9.232 501.424 8.176C501.616 7.11999 502.048 5.91999 502.72 4.57599C504.064 2.08 507.76 0.831998 513.808 0.831998C519.568 0.831998 523.168 2.08 524.608 4.57599C525.28 5.82399 525.664 6.97599 525.76 8.03199C525.952 9.08799 526.048 10.672 526.048 12.784V13.648C526.048 15.76 525.952 17.344 525.76 18.4C525.664 19.456 525.232 20.656 524.464 22C523.696 23.344 522.4 24.304 520.576 24.88ZM506.608 36.544C508.432 35.968 510.832 35.68 513.808 35.68C516.784 35.68 519.136 35.968 520.864 36.544C522.592 37.12 523.792 38.128 524.464 39.568C525.232 40.912 525.664 42.16 525.76 43.312C525.952 44.368 526.048 46 526.048 48.208V107.536C526.048 118.768 522.16 127.744 514.384 134.464C506.608 141.184 498.064 144.544 488.752 144.544C486.544 144.544 484.912 144.448 483.856 144.256C482.8 144.16 481.6 143.776 480.256 143.104C477.76 141.76 476.512 138.256 476.512 132.592C476.512 126.928 477.568 123.376 479.68 121.936C481.696 120.496 484.48 119.776 488.032 119.776C491.488 119.776 494.56 118.816 497.248 116.896C499.936 114.976 501.28 111.52 501.28 106.528V47.2C501.28 43.84 501.712 41.392 502.576 39.856C503.536 38.224 504.88 37.12 506.608 36.544ZM526.761 74.128C526.761 62.608 530.793 53.104 538.857 45.616C546.921 38.128 556.137 34.384 566.505 34.384C576.873 34.384 586.041 38.128 594.009 45.616C601.977 53.008 605.961 62.464 605.961 73.984C605.961 81.952 603.897 89.056 599.769 95.296C595.641 101.44 590.601 106 584.649 108.976C578.793 111.856 572.697 113.296 566.361 113.296C560.025 113.296 553.881 111.76 547.929 108.688C541.977 105.52 536.937 100.912 532.809 94.864C528.777 88.72 526.761 81.808 526.761 74.128ZM556.857 84.496C559.929 86.8 563.049 87.952 566.217 87.952C569.385 87.952 572.553 86.752 575.721 84.352C578.889 81.952 580.473 78.4 580.473 73.696C580.473 68.992 578.985 65.488 576.009 63.184C573.033 60.88 569.817 59.728 566.361 59.728C562.905 59.728 559.689 60.928 556.713 63.328C553.737 65.728 552.249 69.28 552.249 73.984C552.249 78.592 553.785 82.096 556.857 84.496ZM658.177 36.976C660.001 37.552 661.489 38.56 662.641 40C663.889 41.344 664.513 43.552 664.513 46.624C664.513 49.696 663.601 53.056 661.777 56.704C659.953 60.352 657.313 62.176 653.857 62.176C652.129 62.176 650.449 61.792 648.817 61.024C647.281 60.256 645.217 59.872 642.625 59.872C640.033 59.872 637.585 60.784 635.281 62.608C633.073 64.432 631.969 66.64 631.969 69.232V99.472C631.969 101.68 631.873 103.36 631.681 104.512C631.585 105.568 631.153 106.816 630.385 108.256C628.945 110.752 625.201 112 619.153 112C614.545 112 611.233 111.184 609.217 109.552C607.681 108.208 606.817 106.144 606.625 103.36C606.625 102.4 606.625 101.008 606.625 99.184V48.64C606.625 46.432 606.673 44.8 606.769 43.744C606.961 42.592 607.393 41.344 608.065 40C609.409 37.408 613.153 36.112 619.297 36.112C625.057 36.112 628.657 37.216 630.097 39.424C631.153 40.96 631.681 42.544 631.681 44.176C632.161 43.504 632.833 42.688 633.697 41.728C634.657 40.768 636.625 39.472 639.601 37.84C642.577 36.208 645.169 35.392 647.377 35.392C649.681 35.392 651.601 35.536 653.137 35.824C654.673 36.016 656.353 36.4 658.177 36.976ZM705.989 36.112C715.589 36.112 723.557 39.808 729.893 47.2C736.325 54.496 739.541 63.424 739.541 73.984V99.328C739.541 101.536 739.445 103.216 739.253 104.368C739.157 105.424 738.773 106.624 738.101 107.968C736.757 110.56 733.013 111.856 726.869 111.856C720.053 111.856 716.117 110.08 715.061 106.528C714.485 104.896 714.197 102.448 714.197 99.184V73.84C714.197 69.904 713.045 66.832 710.741 64.624C708.533 62.416 705.509 61.312 701.669 61.312C697.925 61.312 694.853 62.464 692.453 64.768C690.149 67.072 688.997 70.096 688.997 73.84V99.328C688.997 101.536 688.901 103.216 688.709 104.368C688.613 105.424 688.181 106.624 687.413 107.968C686.165 110.56 682.469 111.856 676.325 111.856C670.277 111.856 666.581 110.56 665.237 107.968C664.565 106.528 664.133 105.28 663.941 104.224C663.845 103.072 663.797 101.392 663.797 99.184V48.208C663.797 46.096 663.845 44.512 663.941 43.456C664.133 42.304 664.613 41.056 665.381 39.712C666.725 37.312 670.421 36.112 676.469 36.112C682.325 36.112 685.925 37.216 687.269 39.424C688.229 41.056 688.709 43.024 688.709 45.328C689.093 44.656 689.957 43.696 691.301 42.448C692.645 41.2 693.941 40.192 695.189 39.424C698.453 37.216 702.053 36.112 705.989 36.112ZM815.638 65.056C815.638 70.912 814.15 75.28 811.174 78.16C808.294 80.944 805.078 82.336 801.526 82.336H767.398C767.398 85.024 768.982 87.28 772.15 89.104C775.318 90.928 778.486 91.84 781.654 91.84C787.222 91.84 791.59 91.264 794.758 90.112L796.342 89.536C798.646 88.48 800.566 87.952 802.102 87.952C805.174 87.952 807.814 90.112 810.022 94.432C811.27 97.024 811.894 99.232 811.894 101.056C811.894 109.6 801.67 113.872 781.222 113.872C774.118 113.872 767.782 112.672 762.214 110.272C756.742 107.776 752.47 104.512 749.398 100.48C743.35 92.704 740.326 84.016 740.326 74.416C740.326 62.32 744.214 52.672 751.99 45.472C759.862 38.176 769.654 34.528 781.366 34.528C794.71 34.528 804.502 39.232 810.742 48.64C814.006 53.632 815.638 59.104 815.638 65.056ZM785.254 69.232C788.902 69.232 790.726 67.696 790.726 64.624C790.726 62.416 789.862 60.64 788.134 59.296C786.502 57.952 784.102 57.28 780.934 57.28C777.862 57.28 774.79 58.576 771.718 61.168C768.646 63.664 767.11 66.352 767.11 69.232H785.254ZM858.441 36.4C868.041 36.4 876.009 40.048 882.345 47.344C888.777 54.64 891.993 63.568 891.993 74.128V99.472C891.993 101.68 891.897 103.36 891.705 104.512C891.609 105.568 891.177 106.816 890.409 108.256C889.161 110.752 885.465 112 879.321 112C873.465 112 869.817 110.752 868.377 108.256C867.609 106.816 867.129 105.52 866.937 104.368C866.841 103.216 866.793 101.488 866.793 99.184V73.984C866.793 70.048 865.689 66.976 863.481 64.768C861.273 62.56 858.441 61.456 854.985 61.456C851.625 61.456 848.649 62.512 846.057 64.624C843.465 66.64 841.977 68.944 841.593 71.536V99.472C841.593 101.68 841.497 103.36 841.305 104.512C841.209 105.568 840.777 106.816 840.009 108.256C838.761 110.752 835.065 112 828.921 112C822.873 112 819.177 110.704 817.833 108.112C817.161 106.672 816.729 105.424 816.537 104.368C816.441 103.312 816.393 101.632 816.393 99.328V13.216C816.393 11.008 816.441 9.37599 816.537 8.32C816.729 7.16799 817.161 5.91999 817.833 4.57599C819.177 1.98399 822.921 0.687991 829.065 0.687991C835.113 0.687991 838.761 1.98399 840.009 4.57599C840.777 6.016 841.209 7.312 841.305 8.46399C841.497 9.52 841.593 11.152 841.593 13.36V45.184C846.393 39.328 852.009 36.4 858.441 36.4ZM892.78 74.128C892.78 62.608 896.812 53.104 904.876 45.616C912.94 38.128 922.156 34.384 932.524 34.384C942.892 34.384 952.06 38.128 960.028 45.616C967.996 53.008 971.98 62.464 971.98 73.984C971.98 81.952 969.916 89.056 965.788 95.296C961.66 101.44 956.62 106 950.668 108.976C944.812 111.856 938.716 113.296 932.38 113.296C926.044 113.296 919.9 111.76 913.948 108.688C907.996 105.52 902.956 100.912 898.828 94.864C894.796 88.72 892.78 81.808 892.78 74.128ZM922.876 84.496C925.948 86.8 929.068 87.952 932.236 87.952C935.404 87.952 938.572 86.752 941.74 84.352C944.908 81.952 946.492 78.4 946.492 73.696C946.492 68.992 945.004 65.488 942.028 63.184C939.052 60.88 935.836 59.728 932.38 59.728C928.924 59.728 925.708 60.928 922.732 63.328C919.756 65.728 918.268 69.28 918.268 73.984C918.268 78.592 919.804 82.096 922.876 84.496ZM991.94 24.88C990.212 25.36 987.86 25.6 984.884 25.6C981.908 25.6 979.556 25.312 977.828 24.736C976.1 24.16 974.852 23.2 974.084 21.856C973.412 20.416 972.98 19.168 972.788 18.112C972.692 16.96 972.644 15.28 972.644 13.072C972.644 10.864 972.692 9.232 972.788 8.176C972.98 7.11999 973.412 5.91999 974.084 4.57599C975.428 2.08 979.124 0.831998 985.172 0.831998C990.932 0.831998 994.532 2.08 995.972 4.57599C996.644 5.82399 997.028 6.97599 997.124 8.03199C997.316 9.08799 997.412 10.672 997.412 12.784V13.648C997.412 15.76 997.316 17.344 997.124 18.4C997.028 19.456 996.596 20.656 995.828 22C995.06 23.344 993.764 24.304 991.94 24.88ZM977.972 36.544C979.796 35.968 982.196 35.68 985.172 35.68C988.148 35.68 990.5 35.968 992.228 36.544C993.956 37.12 995.156 38.128 995.828 39.568C996.596 40.912 997.028 42.16 997.124 43.312C997.316 44.368 997.412 46 997.412 48.208V107.536C997.412 118.768 993.524 127.744 985.748 134.464C977.972 141.184 969.428 144.544 960.116 144.544C957.908 144.544 956.276 144.448 955.22 144.256C954.164 144.16 952.964 143.776 951.62 143.104C949.124 141.76 947.876 138.256 947.876 132.592C947.876 126.928 948.932 123.376 951.044 121.936C953.06 120.496 955.844 119.776 959.396 119.776C962.852 119.776 965.924 118.816 968.612 116.896C971.3 114.976 972.644 111.52 972.644 106.528V47.2C972.644 43.84 973.076 41.392 973.94 39.856C974.9 38.224 976.244 37.12 977.972 36.544Z'\n                    fill='#2F80ED'\n                  />\n                </svg>\n              </Link>\n            </Col>\n            <Col xs={0} sm={16} md={12} lg={16} xl={18}>\n              <Menu mode='horizontal'>\n                {user ? signInMenu : signOutMenu}\n                {globalMenu}\n              </Menu>\n            </Col>\n          </Row>\n        </div>\n      </Affix>\n    </header>\n  );\n}\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport LayoutPageProperties from '../interfaces/LayoutPageProperties';\nimport { Footer, Header } from './ui';\nimport './css/index.scss';\n\nnotification.config({\n  placement: 'bottomRight',\n  bottom: 50,\n  duration: 3,\n});\n\nconst GlobalLayout: React.FC<LayoutPageProperties> = ({ Component, route }) => (\n  <div className='public-layout'>\n    <Header />\n    <div className='content-page'>\n      <div className='content-width breadcrumbs' />\n      <Component route={route} />\n    </div>\n    <Footer />\n  </div>\n);\n\nexport default GlobalLayout;\n","import { Avatar } from 'antd';\nimport React from 'react';\nimport './index.scss';\n\ninterface UserAvatarProperties {\n  fullName: string;\n  emailVerified: boolean;\n  userStatusID: string;\n}\nconst UserAvatar: React.FC<UserAvatarProperties> = ({ fullName, emailVerified, userStatusID }) => {\n  const name = fullName.split(' ');\n  const initials = name.map((n: string) => n[0]).join('');\n  const classEmail = emailVerified ? 'verified' : 'not-verified';\n  const className = `user-${userStatusID} user-${classEmail}`;\n  return (\n    <Avatar size='large' className={`users-avatar ${className}`}>\n      {initials}\n    </Avatar>\n  );\n};\n\nexport default UserAvatar;\n","import { Typography } from 'antd';\nimport React from 'react';\n\nimport UserAvatar from '../UserAvatar';\nimport './index.scss';\n\ninterface UserTitleProperties {\n  name: string;\n  emailVerified: boolean;\n  userStatusID: string;\n}\n\nconst { Title } = Typography;\n\nconst UserTitle: React.FC<UserTitleProperties> = ({\n  name,\n  emailVerified,\n  userStatusID,\n}) => (\n  <div className='user-title'>\n    <div className='user-title-avatar'>\n      <UserAvatar\n        fullName={name}\n        emailVerified={emailVerified}\n        userStatusID={userStatusID}\n      />\n    </div>\n    <div className='user-title-data'>\n      <Title level={4}>\n        {name}\n      </Title>\n      <ul>\n        <li>\n          status:\n          {' '}\n          {userStatusID}\n        </li>\n        <li>\n          email:\n          {' '}\n          {emailVerified ? 'verified' : 'not verified'}\n        </li>\n      </ul>\n    </div>\n  </div>\n);\nexport default UserTitle;\n","import React from 'react';\nimport { Alert } from 'antd';\nimport { CombinedError } from '@urql/core';\n\nexport interface AlertErrorProperties {\n  error: CombinedError;\n}\n\ninterface ValidationErrors {\n  code: string;\n  errors: { [field: string]: string[]};\n}\n\nexport const getErrors = (error: CombinedError) => {\n  if (\n    error.graphQLErrors\n    && error.graphQLErrors[0]\n    && error.graphQLErrors[0].extensions\n    && error.graphQLErrors[0].extensions.error\n  ) {\n    const extensionError = error.graphQLErrors[0].extensions.error;\n    if (extensionError.code === 'ValidatorError') {\n      const validationErrors = extensionError as ValidationErrors;\n      const html = [];\n      // eslint-disable-next-line no-restricted-syntax\n      for (const [key, errors] of Object.entries(validationErrors.errors)) {\n        const htmlErrors: React.ReactNode[] = [];\n        errors.forEach((value) => {\n          htmlErrors.push(<span className='validation-error'>{value}</span>);\n        });\n        html.push(\n          <div>\n            <span className='validation-error-key'>{key}</span>\n            :\n            {' '}\n            <span className='validation-error-list'>{htmlErrors}</span>\n          </div>,\n        );\n      }\n      return html;\n    }\n\n    if (extensionError.code === 'MessageError') {\n      return (\n        <div className='message-error'>{error.message}</div>\n      );\n    }\n  }\n\n  return <>{error.message}</>;\n};\n\nconst AlertError: React.FC<AlertErrorProperties> = ({ error }) => (\n  <div>\n    <Alert\n      type='error'\n      showIcon\n      message={getErrors(error)}\n      style={{ marginBottom: 20 }}\n    />\n  </div>\n);\n\nexport default AlertError;\n","import React from 'react';\nimport { InboxOutlined, LockOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Spin } from 'antd';\nimport { CombinedError } from 'urql';\n\nimport AlertError from 'ui/Alert/AlertError';\n\nexport interface OnFinishArguments {\n  email: string;\n  password: string;\n}\n\ninterface EmailFormProperties {\n  email: string;\n  onFinish: (values: OnFinishArguments) => void;\n  error?: CombinedError;\n  fetching: boolean;\n}\n\nexport const EmailProfileForm: React.FC<EmailFormProperties> = ({\n  email,\n  onFinish,\n  fetching,\n  error,\n}) => (\n  <Spin spinning={fetching}>\n    {error && <AlertError error={error} />}\n    <Form\n      initialValues={{ email }}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        name='email'\n        rules={[\n          {\n            required: true,\n            message: 'Please input your email',\n          },\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input\n          autoComplete='email'\n          placeholder='Email'\n          size='large'\n          type='email'\n          prefix={<InboxOutlined />}\n        />\n      </Form.Item>\n\n      <Form.Item\n        name='password'\n        rules={[\n          {\n            required: true,\n            message: 'Please input your password!',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input.Password\n          autoComplete='password'\n          size='large'\n          placeholder='Password'\n          prefix={<LockOutlined />}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button\n          type='primary'\n          htmlType='submit'\n          className='session-form-button'\n        >\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  </Spin>\n);\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport { useProfileUpdateEmailMutation } from 'graphql/generated';\nimport { EmailProfileForm, OnFinishArguments } from './Form';\n\ninterface EmailFormProperties {\n  email: string;\n  onSuccess: (email: string) => void;\n}\n\nconst EmailForm: React.FC<EmailFormProperties> = ({ email, onSuccess }) => {\n  const [{ fetching, error }, updateEmail] = useProfileUpdateEmailMutation();\n\n  const onFinish = async (variables: OnFinishArguments) => {\n    const response = await updateEmail(variables);\n    if (response.data) {\n      const { message, type } = response.data.profileUpdateEmail.message;\n      notification[type]({ message });\n      onSuccess(response.data.profileUpdateEmail.data.email);\n    }\n  };\n\n  return (\n    <EmailProfileForm {...{ fetching, error, onFinish, email }} />\n  );\n};\n\nexport default EmailForm;\n","import { RuleObject } from 'antd/lib/form';\n\nconst rulePass = (\n  getFieldValue: (name: string) => string,\n  field: string,\n) => ({\n  validator(_: RuleObject, value: string) {\n    if (!value || getFieldValue(field) === value) {\n      return Promise.resolve();\n    }\n    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n  },\n});\n\nexport default rulePass;\n","export const required = (message: string) => ({\n  required: true,\n  message,\n});\n\nexport const min = (minNumber: number, message: string) => ({\n  minNumber,\n  message,\n});\n\nconst type = (type_: string, message?: string) => ({\n  type: type_,\n  message: message ?? 'Email no valido',\n});\n\nexport const email = (message?: string) => type('email', message);\n","import React from 'react';\nimport { LockOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Spin } from 'antd';\nimport { CombinedError } from 'urql';\n\nimport rulePass from 'rules/password';\nimport { min, required } from 'rules/required';\nimport AlertError from 'ui/Alert/AlertError';\n\nexport interface OnFinishArguments {\n  password: string;\n  newPassword: string;\n  confirmNewPassword: string;\n}\n\ninterface PasswordProfileFormProperties {\n  email: string;\n  fetching: boolean;\n  error?: CombinedError;\n  onFinish: (values: OnFinishArguments) => void;\n}\nexport const PasswordProfileForm: React.FC<PasswordProfileFormProperties> = ({\n  email,\n  fetching,\n  error,\n  onFinish,\n}) => {\n  const passMinRule = min(6, 'Password must be at least 6 characters');\n  return (\n    <div>\n      {error && <AlertError error={error} />}\n      <Spin spinning={fetching}>\n        <Form autoComplete='off' onFinish={onFinish}>\n          <input\n            type='email'\n            autoComplete='email'\n            value={email}\n            readOnly\n            style={{ display: 'none' }}\n          />\n\n          <Form.Item\n            name='password'\n            hasFeedback\n            rules={[\n              required('Please confirm your password'),\n            ]}\n          >\n            <Input.Password\n              autoComplete='password'\n              size='large'\n              placeholder='Current password'\n              prefix={<LockOutlined />}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name='newPassword'\n            hasFeedback\n            rules={[\n              required('Please input your password!'),\n              passMinRule,\n            ]}\n          >\n            <Input.Password\n              autoComplete='newPassword'\n              size='large'\n              placeholder='New Password'\n              prefix={<LockOutlined />}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name='confirmNewPassword'\n            dependencies={['newPassword']}\n            hasFeedback\n            rules={[\n              required('Please confirm your password'),\n              passMinRule,\n              ({ getFieldValue }) => rulePass(getFieldValue, 'newPassword'),\n            ]}\n          >\n            <Input.Password\n              autoComplete='new-password'\n              size='large'\n              placeholder='Confirm new password'\n              prefix={<LockOutlined />}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type='primary'\n              htmlType='submit'\n              className='session-form-button'\n            >\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Spin>\n    </div>\n  );\n};\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport { useProfileUpdatePasswordMutation } from 'graphql/generated';\nimport { PasswordProfileForm, OnFinishArguments } from './Form';\n\nconst PasswordForm: React.FC<{ email: string}> = ({ email }) => {\n  const [{ fetching, error }, updatePasword] = useProfileUpdatePasswordMutation();\n\n  const onFinish = async (variables: OnFinishArguments) => {\n    const response = await updatePasword(variables);\n    if (response.data) {\n      const { message, type } = response.data.profileUpdatePassword.message;\n      notification[type]({ message });\n    }\n  };\n\n  return (\n    <PasswordProfileForm {...{ email, fetching, onFinish, error }} />\n  );\n};\n\nexport default PasswordForm;\n","import React from 'react';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Spin } from 'antd';\nimport { CombinedError } from 'urql';\nimport { FormattedMessage } from 'react-intl';\n\nimport AlertError from 'ui/Alert/AlertError';\n\nexport interface FormArguments {\n  firstName: string;\n  lastName: string;\n}\n\ninterface UserProfileFormProperties {\n  defaultValues: FormArguments;\n  onFinish: (values: FormArguments) => void;\n  fetching: boolean;\n  error?: CombinedError;\n}\n\nexport const UserProfileForm: React.FC<UserProfileFormProperties> = ({\n  defaultValues,\n  onFinish,\n  fetching,\n  error,\n}) => (\n  <Spin spinning={fetching}>\n    {error && <AlertError error={error} />}\n    <Form\n      initialValues={defaultValues}\n      onFinish={onFinish}\n    >\n      <Form.Item\n        name='firstName'\n        hasFeedback\n      >\n        <Input\n          autoComplete='firstName'\n          placeholder='First name'\n          size='large'\n          autoFocus\n          prefix={<UserOutlined />}\n        />\n      </Form.Item>\n      <Form.Item\n        name='lastName'\n        hasFeedback\n      >\n        <Input\n          autoComplete='lastName'\n          placeholder='Last name'\n          size='large'\n          autoFocus\n          prefix={<UserOutlined />}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button\n          type='primary'\n          htmlType='submit'\n          className='session-form-button'\n          disabled={fetching}\n        >\n          <FormattedMessage id='generic.submit' />\n        </Button>\n      </Form.Item>\n    </Form>\n  </Spin>\n);\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport { useProfileBasicUpdateMutation } from 'graphql/generated';\nimport { UserProfileForm, FormArguments } from './Form';\n\ninterface UserProfileFormProperties {\n  firstName: string;\n  lastName: string;\n  onSuccess: (firstName: string, lastName: string) => void;\n}\n\nconst BasicForm: React.FC<UserProfileFormProperties> = ({ firstName, lastName, onSuccess }) => {\n  const [{ fetching, error }, updateName] = useProfileBasicUpdateMutation();\n\n  const onFinish = async (variables: FormArguments) => {\n    const response = await updateName(variables);\n    if (response.data) {\n      const { message, type } = response.data.profileBasicUpdate.message;\n      notification[type]({ message });\n      const { firstName: firstName_, lastName: lastName_ } = response.data.profileBasicUpdate.data;\n      onSuccess(firstName_, lastName_);\n    }\n  };\n\n  return (\n    <UserProfileForm {...{ fetching, error, onFinish, defaultValues: { firstName, lastName } }} />\n  );\n};\n\nexport default BasicForm;\n","import React from 'react';\nimport { Typography, Tabs } from 'antd';\n\nimport UserTitle from 'ui/User/UserTitle';\nimport { EmailForm, PasswordForm, BasicForm } from './Forms';\nimport { UseUserReturn } from 'use/user/UserContext';\nimport { LoggedUserMutation } from 'graphql/generated';\n\nconst { Title } = Typography;\nconst { TabPane } = Tabs;\n\ninterface ProfileViewPorperties extends Pick<UseUserReturn, 'setName' | 'setEmail'> {\n  user: LoggedUserMutation['loggedUser'];\n}\n\nconst ProfileView: React.FC<ProfileViewPorperties> = ({\n  user,\n  setName,\n  setEmail,\n}) => (\n  <div>\n    <Title>\n      Profile\n    </Title>\n    <UserTitle {...{\n      name: user.firstName,\n      emailVerified: user.emailVerified,\n      userStatusID: 'active',\n    }}\n    />\n    <Tabs defaultActiveKey='name' style={{ width: '100%' }}>\n      <TabPane\n        tab='Name'\n        key='name'\n      >\n        <BasicForm firstName={user.firstName} lastName={user.lastName} onSuccess={setName} />\n      </TabPane>\n      <TabPane\n        tab='Email'\n        key='email'\n      >\n        <EmailForm email={user.email} onSuccess={setEmail} />\n      </TabPane>\n      <TabPane\n        tab='Password'\n        key='password'\n      >\n        <PasswordForm email={user.email} />\n      </TabPane>\n    </Tabs>\n  </div>\n);\nexport default ProfileView;\n","import React, { useContext } from 'react';\n\nimport UserContext from 'use/user/UserContext';\nimport PageProperties from 'routes/PageProperties';\nimport ProfileView from './ProfileView';\n\nconst Profile: React.FC<PageProperties> = () => {\n  const { user, setName, setEmail } = useContext(UserContext);\n  if (!user) {\n    return <div>Must be logged</div>;\n  }\n  return (\n    <ProfileView {...{ user, setName, setEmail }} />\n  );\n};\nexport default Profile;\n","import { ColumnTableProperties } from './ColumnTableProperties';\nimport TableColumnAbstract from './TableColumnAbstract';\n\nexport default class TableColumns {\n  public readonly columns: TableColumnAbstract[];\n\n  public constructor(columns: TableColumnAbstract[]) {\n    this.columns = columns;\n  }\n\n  public getColumns(): ColumnTableProperties[] {\n    return this.columns.map((column) => column.column);\n  }\n\n  public append(column: TableColumnAbstract) {\n    this.columns.push(column);\n  }\n}\n","import { ColumnTableProperties } from './base/ColumnTableProperties';\nimport TableColumnAbstract from './base/TableColumnAbstract';\n\ninterface ColumnProperties<T> extends ColumnTableProperties{\n  indexID: keyof T;\n}\n\nexport default class IDColumn<T> implements TableColumnAbstract {\n  public readonly column: ColumnTableProperties<T>;\n\n  constructor({ indexID, orderBy, ...props }: ColumnProperties<T>) {\n    this.column = {\n      title: 'ID',\n      className: 'fit-center-column',\n      ...props,\n      render: (_: string, data: T) => data[indexID],\n      sorter: !!orderBy,\n      orderBy,\n    };\n  }\n}\n","import { DeleteOutlined, LoadingOutlined } from '@ant-design/icons';\nimport { Button, Popconfirm, Tooltip } from 'antd';\nimport React from 'react';\nimport './index.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ntype IOnConfirm = (event?: React.MouseEvent<HTMLElement>) => void;\n\ninterface ConfirmDeleteProperties {\n  onConfirm: IOnConfirm;\n  title?: string;\n  delText?: string;\n  tooltip?: string;\n  loading?: boolean;\n}\n\nconst ConfirmDelete: React.FC<ConfirmDeleteProperties> = ({\n  onConfirm,\n  title,\n  delText,\n  tooltip,\n  loading,\n}) => {\n  const newTitle = title ?? 'Are you sure delete it?';\n\n  if (loading) {\n    return (\n      <Button\n        size='small'\n        icon={<LoadingOutlined />}\n        type='dashed'\n        disabled\n      />\n    );\n  }\n  const component = (\n    <Popconfirm\n      title={newTitle}\n      onConfirm={onConfirm}\n      okText='Yes'\n      cancelText='No'\n    >\n      <Button\n        size='small'\n        icon={<DeleteOutlined />}\n        type='dashed'\n        className='confirm-delete'\n      >\n        {delText}\n      </Button>\n    </Popconfirm>\n  );\n\n  if (tooltip) {\n    return (\n      <Tooltip title={tooltip}>\n        {component}\n      </Tooltip>\n    );\n  }\n\n  return component;\n};\n\nexport default ConfirmDelete;\n","import { LockOutlined } from '@ant-design/icons';\nimport React from 'react';\nimport { ColumnProps } from 'antd/lib/table';\n\nimport { ColumnTableProperties } from './base/ColumnTableProperties';\nimport TableColumnAbstract from './base/TableColumnAbstract';\nimport ConfirmDelete from 'ui/Buttons/ConfirmDelete';\n\nexport interface DeleteColumnProperties<T> {\n  onDelete: (item: T, index: number) => void;\n  isLoading?: (item: T, index: number) => boolean;\n  props?: ColumnProps<T>;\n}\nexport default class DeleteColumn<T> implements TableColumnAbstract {\n  public readonly column: ColumnTableProperties;\n\n  constructor(properties: DeleteColumnProperties<T>) {\n    const { onDelete, isLoading, props } = properties;\n    const column: ColumnTableProperties = {\n      className: 'fit-center-column',\n      key: 'delete',\n      title: 'Delete',\n    };\n\n    column.render = function delColumn(_: string, data: T, index: number) {\n      if (data['isBlocked' as keyof T]) {\n        return <LockOutlined />;\n      }\n      return (\n        <ConfirmDelete\n          onConfirm={() => onDelete(data, index)}\n          loading={isLoading ? isLoading(data, index) : false}\n        />\n      );\n    };\n\n    this.column = {\n      ...column,\n      ...props,\n    };\n  }\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { ColumnTableProperties } from './base/ColumnTableProperties';\nimport TableColumnAbstract from './base/TableColumnAbstract';\n\ntype onSelectType<T> = (data: T, index: number) => void;\ntype getLinkType<T> = (data: T) => string;\n\ninterface StringColumnProperties<T> extends ColumnTableProperties {\n  indexID: keyof T;\n  onSelectLink?: onSelectType<T>;\n  getLink?: getLinkType<T>;\n}\n\nexport default class StringColumn<T> implements TableColumnAbstract {\n  public readonly column: ColumnTableProperties;\n\n  constructor(private readonly properties: StringColumnProperties<T>) {\n    const { indexID, onSelectLink, getLink, orderBy, ...props } = properties;\n    this.column = {\n      ...props,\n      render: this.getRender(),\n      sorter: !!orderBy,\n      orderBy,\n    };\n  }\n\n  private getRender() {\n    if (this.properties.onSelectLink) {\n      return this.getRenderButton(this.properties.onSelectLink);\n    }\n    if (this.properties.getLink) {\n      return this.getRenderLink(this.properties.getLink);\n    }\n    return this.getRenderString();\n  }\n\n  private getRenderButton(onSelectLink: onSelectType<T>) {\n    const { indexID } = this.properties;\n    return (_: string, data: T, index: number) => (\n      <Button\n        onClick={() => onSelectLink(data, index)}\n        type='link'\n        className='link-button'\n      >\n        {data[indexID]}\n      </Button>\n    );\n  }\n\n  private getRenderLink(getLink: getLinkType<T>) {\n    const { indexID } = this.properties;\n    return (_: string, data: T) => (\n      <Link to={getLink(data)}>\n        {data[indexID]}\n      </Link>\n    );\n  }\n\n  private getRenderString() {\n    const { indexID } = this.properties;\n    return (_: string, data: T) => data[indexID];\n  }\n}\n","import React from 'react';\nimport { Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { ColumnTableProperties } from './base/ColumnTableProperties';\nimport TableColumnAbstract from './base/TableColumnAbstract';\n\ntype onSelectType<T> = (data: T, index: number) => void;\ntype getLinkType<T> = (data: T) => string;\n\ninterface VText {\n  text: string;\n  langID: string;\n  originalLangID: string;\n}\n\ninterface TextColumnProperties<T> extends ColumnTableProperties {\n  indexID: keyof T;\n  onSelectLink?: onSelectType<T>;\n  getLink?: getLinkType<T>;\n}\n\nexport default class TextColumn<T> implements TableColumnAbstract {\n  public readonly column: ColumnTableProperties;\n\n  constructor(private readonly properties: TextColumnProperties<T>) {\n    const { indexID, onSelectLink, getLink, orderBy, ...props } = properties;\n    this.column = {\n      ...props,\n      render: this.getRender(),\n      sorter: !!orderBy,\n      orderBy,\n    };\n  }\n\n  private getRender() {\n    if (this.properties.onSelectLink) {\n      return this.getRenderButton(this.properties.onSelectLink);\n    }\n    if (this.properties.getLink) {\n      return this.getRenderLink(this.properties.getLink);\n    }\n    return this.getRenderString();\n  }\n\n  private getRenderButton(onSelectLink: onSelectType<T>) {\n    const { indexID } = this.properties;\n    return (_: string, data: T, index: number) => {\n      const text = data[indexID] as unknown as VText;\n      return (\n        <Button\n          onClick={() => onSelectLink(data, index)}\n          type='link'\n          className='link-button'\n        >\n          {text.text}\n        </Button>\n      );\n    };\n  }\n\n  private getRenderLink(getLink: getLinkType<T>) {\n    const { indexID } = this.properties;\n    return (_: string, data: T) => {\n      const text = data[indexID] as unknown as VText;\n      return (\n        <Link to={getLink(data)}>\n          {text.text}\n        </Link>\n      );\n    };\n  }\n\n  private getRenderString() {\n    const { indexID } = this.properties;\n    return (_: string, data: T) => {\n      const text = data[indexID] as unknown as VText;\n      return text.text;\n    };\n  }\n}\n","import React from 'react';\nimport { Button } from 'antd';\n\nimport { ColumnTableProperties } from './base/ColumnTableProperties';\nimport TableColumnAbstract from './base/TableColumnAbstract';\n\ntype onSelectType<T> = (data: T, index: number) => void;\n\ninterface OnSelectColumnProperties<T> extends ColumnTableProperties {\n  indexID: keyof T;\n  onSelect: onSelectType<T>;\n}\n\nexport default class OnSelectColumn<T> implements TableColumnAbstract {\n  public readonly column: ColumnTableProperties;\n\n  constructor(private readonly properties: OnSelectColumnProperties<T>) {\n    const { indexID, onSelect, ...props } = properties;\n    this.column = {\n      ...props,\n      render: this.getRender(onSelect),\n    };\n  }\n\n  private getRender(onSelect: onSelectType<T>) {\n    const { indexID } = this.properties;\n    return (_: string, data: T, index: number) => (\n      <Button\n        onClick={() => onSelect(data, index)}\n        type='link'\n        className='link-button'\n      >\n        {data[indexID]}\n      </Button>\n    );\n  }\n}\n","import React from 'react';\nimport { Pagination } from 'antd';\n\nimport './pages.scss';\n\nconst goToScroll = (tagName: string) => {\n  const body = document.getElementsByTagName(tagName);\n  if (body[0]) { body[0].scrollIntoView({ behavior: 'smooth' }); }\n};\n\nconst showTotal = (\n  total: number,\n  range: [number, number],\n  itemsLabel: string,\n): React.ReactNode => (\n  <>\n    {`${range[0]} - ${range[1]} of ${total} ${itemsLabel}`}\n  </>\n);\n\ninterface PaginateProperties {\n  onChange: (page: number, pageSize: number) => void;\n  pagination: {\n    total: number;\n    limit: number;\n    page: number;\n  };\n  itemsLabel?: string;\n  scroll?: string;\n  small?: boolean;\n}\n\nconst PaginationLocal: React.FC<PaginateProperties> = ({\n  onChange,\n  pagination,\n  itemsLabel,\n  scroll,\n  small,\n}) => {\n  if (\n    pagination.total\n    && pagination.limit\n    && pagination.total <= pagination.limit\n  ) {\n    return <></>;\n  }\n\n  if (!pagination.total) { return <></>; }\n\n  const label = typeof itemsLabel === 'string' ? itemsLabel : 'items';\n  const subClass = typeof small === 'string' ? 'pagination-small' : '';\n  const size = small ? 'small' : undefined;\n\n  return (\n    <div className={`pagination ${subClass}`}>\n      <Pagination\n        size={size}\n        showTotal={(total, range) => showTotal(total, range, label)}\n        current={pagination.page}\n        total={pagination.total}\n        pageSize={pagination.limit}\n        onChange={(page, perPage) => {\n          if (scroll) { goToScroll(scroll); }\n          onChange(page, perPage ?? pagination.limit);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default PaginationLocal;\n","import React, { useState } from 'react';\nimport { Spin, Table, Input } from 'antd';\nimport { TablePaginationConfig } from 'antd/lib/table';\nimport { Key, SorterResult } from 'antd/lib/table/interface';\n\nimport { Pagination } from 'graphql/generated';\nimport TableColumns from 'util/columns/base/TableColumns';\nimport { IDColumn, StringColumn, DeleteColumn, OnSelectColumn } from 'util/columns';\nimport PaginationUI from 'ui/Pagination';\nimport { ColumnTableProperties } from 'util/columns/base/ColumnTableProperties';\n\nexport interface User {\n  id: number;\n  email: string;\n  fullName: string;\n}\n\ninterface PaginationArguments {\n  page: number;\n  limit: number;\n}\ninterface OrderByArguments {\n  orderBy: string;\n  order: 'ASC' | 'DESC';\n}\n\ninterface UserFetchMore extends PaginationArguments {\n  search?: string;\n  order?: OrderByArguments;\n}\n\ninterface UsersTableProperties {\n  users: User[];\n  loading?: boolean;\n  pagination: Pagination;\n  fetchMore: (parameters: UserFetchMore) => void;\n  getLink?: (user: User) => string;\n  onSelectLink?: (data: User, index: number) => void;\n  onSelect?: (data: User, index: number) => void;\n  onDelete?: (item: User, index: number) => void;\n}\nconst UsersTable: React.FC<UsersTableProperties> = ({\n  users,\n  loading = false,\n  pagination,\n  fetchMore,\n  getLink,\n  onSelectLink,\n  onSelect,\n  onDelete,\n}) => {\n  const [search, setSearch] = useState('');\n\n  const tableColumns = new TableColumns([\n    new IDColumn<User>({ indexID: 'id', orderBy: 'user_id' }),\n    new StringColumn<User>({ indexID: 'fullName', title: 'Name', orderBy: 'first_name', getLink, onSelectLink }),\n    new StringColumn<User>({ indexID: 'email', title: 'Email', orderBy: 'email', getLink, onSelectLink }),\n  ]);\n  if (onSelect) {\n    tableColumns.append(new OnSelectColumn<User>({ indexID: 'id', onSelect }));\n  }\n  if (onDelete) {\n    tableColumns.append(new DeleteColumn({ onDelete }));\n  }\n  const columns = tableColumns.getColumns();\n\n  const onChangeTable = (\n    _pagination: TablePaginationConfig,\n    _filters: Record<string, (Key | boolean)[] | null>,\n    sorter: SorterResult<User> | SorterResult<User>[],\n  ) => {\n    if (Array.isArray(sorter)) { return; }\n    if (!sorter.column) {\n      fetchMore({\n        page: pagination.page,\n        limit: pagination.limit,\n        search,\n      });\n    } else {\n      const column = sorter.column as ColumnTableProperties;\n      const order = (sorter.order === 'ascend') ? 'ASC' : 'DESC';\n      const columnOrder = column.orderBy\n        ? {\n          orderBy: column.orderBy,\n          order,\n        } as OrderByArguments : undefined;\n      fetchMore({\n        page: 1,\n        limit: pagination.limit,\n        order: columnOrder,\n        search,\n      });\n    }\n  };\n\n  const onSearch = (value: string) => {\n    fetchMore({\n      page: 1,\n      limit: pagination.limit,\n      search: value,\n    });\n  };\n\n  return (\n    <div className='table-view'>\n      <Spin spinning={loading}>\n        <Input.Search\n          placeholder='Search by name, email or ID'\n          onSearch={onSearch}\n          enterButton\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n        <PaginationUI\n          pagination={pagination}\n          onChange={(page, limit) => fetchMore({ page, limit })}\n          small\n        />\n        <Table\n          columns={columns}\n          dataSource={users}\n          pagination={false}\n          onChange={onChangeTable}\n          rowKey={(user) => user.id}\n        />\n        <PaginationUI\n          pagination={pagination}\n          onChange={(page, limit) => fetchMore({ page, limit, search })}\n        />\n      </Spin>\n    </div>\n  );\n};\n\nexport default UsersTable;\n","import React from 'react';\nimport { CombinedError } from 'urql';\n\nimport AlertError from 'ui/Alert/AlertError';\n\ninterface NoDataUrqlProperties {\n  fetching: boolean;\n  error?: CombinedError;\n}\nconst NoDataUrql: React.FC<NoDataUrqlProperties> = ({\n  fetching,\n  error,\n}) => {\n  if (fetching) {\n    return <div> Loading... </div>;\n  }\n  if (error) {\n    return <AlertError error={error} />;\n  }\n  return <div>Something is wrong</div>;\n};\n\nexport default NoDataUrql;\n","import React, { useState } from 'react';\nimport Title from 'antd/lib/typography/Title';\nimport { FormattedMessage } from 'react-intl';\n\nimport { useUsersQuery } from 'graphql/generated';\nimport UsersTable, { User } from 'ui/Users/Table';\nimport AlertError from 'ui/Alert/AlertError';\nimport NoDataUrql from 'ui/NoDataUrql';\nimport PageProperties from 'routes/PageProperties';\n\nconst Users: React.FC<PageProperties> = ({ route }) => {\n  const [limit, setLimit] = useState<number>(10);\n  const [page, setPage] = useState<number>(1);\n  const [search, setSearch] = useState<string>();\n  const [order, setOrder] = useState<string>();\n  const [orderBy, setOrderBy] = useState<string>();\n  const [{ data, fetching, error }] = useUsersQuery(\n    { variables: { limit, page, search, order, orderBy } },\n  );\n\n  if (!data) {\n    return <NoDataUrql fetching={fetching} error={error} />;\n  }\n\n  return (\n    <div>\n      <Title level={1}>\n        <FormattedMessage id='user.users' />\n      </Title>\n      {error && <AlertError error={error} />}\n      <UsersTable\n        loading={fetching}\n        users={data.users.data}\n        getLink={(user: User) => `${route.location.pathname}/${user.id}`}\n        pagination={data.users.pagination}\n        fetchMore={({ page: page_, limit: limit_, search: search_, order: order_ }) => {\n          setLimit(limit_);\n          setPage(page_);\n          setSearch(search_);\n          if (order_) {\n            setOrder(order_.order);\n            setOrderBy(order_.orderBy);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Users;\n","import React from 'react';\nimport {\n  UserOutlined,\n  SafetyOutlined,\n  IssuesCloseOutlined,\n  MailOutlined,\n  KeyOutlined,\n  PullRequestOutlined,\n} from '@ant-design/icons';\nimport { Menu } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { userViewEnum } from '../config';\n\ninterface UserMenuProperties {\n  userID: number;\n  view: userViewEnum;\n}\n\nconst UserMenu = ({ userID, view }: UserMenuProperties) => (\n  <Menu defaultSelectedKeys={[view]}>\n    <Menu.Item key='profile' icon={<UserOutlined />}>\n      <Link to={`/admin/users/${userID}`}>\n        Profile\n      </Link>\n    </Menu.Item>\n    <Menu.Item key='roles' icon={<SafetyOutlined />}>\n      <Link to={`/admin/users/${userID}/roles`}>\n        Roles\n      </Link>\n    </Menu.Item>\n    <Menu.Item key='status-log' icon={<IssuesCloseOutlined />}>\n      <Link to={`/admin/users/${userID}/roles`}>\n        Status Log\n      </Link>\n    </Menu.Item>\n    <Menu.Item key='email-log' icon={<MailOutlined />}>\n      <Link to={`/admin/users/${userID}/roles`}>\n        Email Log\n      </Link>\n    </Menu.Item>\n    <Menu.Item key='tokens' icon={<KeyOutlined />}>\n      <Link to={`/admin/users/${userID}/roles`}>\n        Tokens\n      </Link>\n    </Menu.Item>\n    <Menu.Item key='connections' icon={<PullRequestOutlined />}>\n      <Link to={`/admin/users/${userID}/roles`}>\n        Connections\n      </Link>\n    </Menu.Item>\n  </Menu>\n);\n\nexport default UserMenu;\n","interface UserRole {\n  id: string;\n}\n\nconst verifyRolesUser = (userRoles: UserRole[], role: string): boolean => {\n  for (let index = 0; index < userRoles.length; index += 1) {\n    const exists = userRoles.some((userRole) => userRole.id === role);\n    if (exists) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexport default verifyRolesUser;\n","import React, { useState } from 'react';\nimport { List, Button, Switch, Spin } from 'antd';\n\nimport verifyRolesUser from './verifyRolesUser';\nimport { set, StructFormat } from 'util/stateHandler/struct';\n\ninterface Text {\n  text: string;\n}\n\ninterface Role {\n  id: string;\n  nameID: number;\n  name: {\n    text: string;\n  };\n  description?: Text | null;\n}\n\ninterface UseRole {\n  id: string;\n}\n\ninterface RolesFormProperties {\n  roles: Role[];\n  userRoles: UseRole[];\n  onSave: (roles: StructFormat<boolean>) => void;\n  loading: boolean;\n}\n\nconst UserRolesForm: React.FC<RolesFormProperties> = ({\n  roles,\n  userRoles,\n  onSave,\n  loading,\n}) => {\n  // eslint-disable-next-line unicorn/no-reduce\n  const defaultState = userRoles.reduce((ac, a) => ({ ...ac, [a.id]: true }), {}) ?? {};\n  const [rolesStatus, setRolesStatus] = useState<StructFormat<boolean>>(defaultState);\n  return (\n    <Spin spinning={loading}>\n      <List\n        style={{ marginBottom: 20 }}\n        itemLayout='horizontal'\n        dataSource={roles}\n        renderItem={(role) => (\n          <List.Item\n            actions={[<Switch\n              defaultChecked={verifyRolesUser(userRoles, role.id)}\n              onChange={(checked) => setRolesStatus(\n                (rolesStatus_) => set(rolesStatus_, role.id, checked),\n              )}\n            />]}\n          >\n            <List.Item.Meta\n              title={`${role.name.text} (${role.id})`}\n              description={role.description?.text}\n            />\n          </List.Item>\n        )}\n      />\n      <div style={{ textAlign: 'right' }}>\n        <Button size='small' type='primary' onClick={() => onSave(rolesStatus)}>\n          Submit\n        </Button>\n      </div>\n    </Spin>\n  );\n};\n\nexport default UserRolesForm;\n","export enum userViewEnum {\n  roles='roles',\n  profile='profile',\n}\n\nexport const getViewCode = (route: string, userID: number) => {\n  switch (true) {\n    case route.includes('roles'): return userViewEnum.roles;\n    case (route === `/admin/users/${userID}`): return userViewEnum.profile;\n    default: throw new Error(`The route ${route} for the user ${userID} cannot be found`);\n  }\n};\n","export interface StructFormat<T> {\n  [key: string ]: T;\n}\n\nexport function set<T>(struct: StructFormat<T>, key: string | number, item: T): StructFormat<T> {\n  return {\n    ...struct,\n    [key]: item,\n  };\n}\n\nexport function appendStructFormat<T>(struct: StructFormat<T>, structToAppend: StructFormat<T>): StructFormat<T> {\n  return { ...struct, ...structToAppend };\n}\n\nexport function remove<T>(struct: StructFormat<T>, key: string | number): StructFormat<T> {\n  const { [key]: foo, ...rest } = struct;\n  return rest;\n}\n\n/**\n * Remove many keys from a struct\n *\n * @param struct\n * @param keys\n */\nexport function removeKeys<T>(struct: StructFormat<T>, keys: (string | number)[]): StructFormat<T> {\n  return Object.fromEntries(\n    Object.entries(struct).filter(([key]) => !keys.includes(key)),\n  );\n}\n\n/**\n * Remove undefined or null elements from a struct\n *\n * @param struct\n */\nexport function removeEmpty<T>(struct: StructFormat<T>): StructFormat<T> {\n  return Object.fromEntries(\n    Object.entries(struct).filter(([key]) => (struct[key] !== undefined && struct[key] !== null)),\n  );\n}\n","import React from 'react';\nimport Title from 'antd/lib/typography/Title';\nimport { notification } from 'antd';\n\nimport { UserQuery, useRolesQuery, useUserRolesUpdateMutation } from 'graphql/generated';\nimport NoDataUrql from 'ui/NoDataUrql';\nimport UserRolesForm from './UserRolesForm';\nimport { StructFormat } from 'util/stateHandler/struct';\n\ninterface RolesProperties {\n  user: UserQuery['user'];\n}\nconst Roles: React.FC<RolesProperties> = ({ user }) => {\n  const [{ error: errorRoles, fetching: fetchingRoles, data: dataRoles }] = useRolesQuery();\n  const [{ fetching }, updateRoles] = useUserRolesUpdateMutation();\n  const onSave = async (values: StructFormat<boolean>) => {\n    const response = await updateRoles({\n      userID: user.id,\n      rolesID: Object.keys(values),\n    });\n    if (response.data) {\n      const { message, type } = response.data.userRolesUpdate;\n      notification[type]({ message });\n    }\n  };\n\n  if (!dataRoles) {\n    return <NoDataUrql fetching={fetching} error={errorRoles} />;\n  }\n\n  return (\n    <div>\n      <Title level={3}>\n        Users\n      </Title>\n      <UserRolesForm\n        roles={dataRoles.roles.data}\n        userRoles={user.roles}\n        onSave={onSave}\n        loading={fetchingRoles && fetching}\n      />\n    </div>\n  );\n};\n\nexport default Roles;\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport { useUserBasicUpdateMutation } from 'graphql/generated';\nimport { FormArguments, UserProfileForm } from 'pages/Admin/Profile/Forms/BasicForm/Form';\n\ninterface UserProfileFormProperties {\n  userID: number;\n  firstName: string;\n  lastName: string;\n  onSuccess?: (firstName: string, lastName: string) => void;\n}\n\nconst BasicForm: React.FC<UserProfileFormProperties> = ({ firstName, lastName, userID, onSuccess }) => {\n  const [{ fetching, error }, updateName] = useUserBasicUpdateMutation();\n\n  const onFinish = async (values: FormArguments) => {\n    const response = await updateName({ ...values, id: userID });\n    if (response.data) {\n      const { message, type } = response.data.userBasicUpdate.message;\n      notification[type]({ message });\n      if (onSuccess) {\n        const { firstName: firstName_, lastName: lastName_ } = response.data.userBasicUpdate.data;\n        onSuccess(firstName_, lastName_);\n      }\n    }\n  };\n\n  return (\n    <UserProfileForm {...{ fetching, error, onFinish, defaultValues: { firstName, lastName } }} />\n  );\n};\n\nexport default BasicForm;\n","import React from 'react';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Spin } from 'antd';\nimport { CombinedError } from 'urql';\n\nimport AlertError from 'ui/Alert/AlertError';\n\ninterface EmailUserFormProperties {\n  email: string;\n  onFinish: (email: string) => void;\n  error?: CombinedError;\n  fetching: boolean;\n}\n\nconst EmailUserForm: React.FC<EmailUserFormProperties> = ({\n  email,\n  onFinish,\n  fetching,\n  error,\n}) => (\n  <Spin spinning={fetching}>\n    {error && <AlertError error={error} />}\n    <Form\n      initialValues={{ email }}\n      onFinish={({ email: email_ }) => onFinish(email_)}\n    >\n      <Form.Item\n        name='email'\n        rules={[\n          {\n            required: true,\n            message: 'Please input your email',\n          },\n          {\n            type: 'email',\n            message: 'The input is not valid E-mail',\n          },\n        ]}\n        hasFeedback\n      >\n        <Input\n          autoComplete='email'\n          placeholder='Email'\n          size='large'\n          type='email'\n          prefix={<InboxOutlined />}\n        />\n      </Form.Item>\n      <Form.Item>\n        <Button\n          type='primary'\n          htmlType='submit'\n          className='session-form-button'\n        >\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  </Spin>\n);\n\nexport default EmailUserForm;\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport { useUserUpdateEmailMutation } from 'graphql/generated';\nimport EmailUserForm from './Form';\n\ninterface EmailFormProperties {\n  userID: number;\n  email: string;\n  onSuccess?: (email: string) => void;\n}\n\nconst EmailForm: React.FC<EmailFormProperties> = ({ email, userID, onSuccess }) => {\n  const [{ fetching, error }, updateEmail] = useUserUpdateEmailMutation();\n\n  const onFinish = async (email_: string) => {\n    const response = await updateEmail({ email: email_, id: userID });\n    if (response.data) {\n      const { message, type } = response.data.userUpdateEmail.message;\n      notification[type]({ message });\n      if (onSuccess) {\n        onSuccess(response.data.userUpdateEmail.data.email);\n      }\n    }\n  };\n\n  return (\n    <EmailUserForm {...{ fetching, error, onFinish, email }} />\n  );\n};\n\nexport default EmailForm;\n","import React from 'react';\nimport { LockOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Spin } from 'antd';\nimport { CombinedError } from 'urql';\n\nimport rulePass from 'rules/password';\nimport { min, required } from 'rules/required';\nimport AlertError from 'ui/Alert/AlertError';\n\nexport interface OnFinishArguments {\n  password: string;\n  confirmPassword: string;\n}\n\ninterface PasswordUserFormProperties {\n  email: string;\n  fetching: boolean;\n  error?: CombinedError;\n  onFinish: (values: OnFinishArguments) => void;\n}\nexport const PasswordUserForm: React.FC<PasswordUserFormProperties> = ({\n  email,\n  fetching,\n  error,\n  onFinish,\n}) => {\n  const passMinRule = min(6, 'Password must be at least 6 characters');\n  return (\n    <div>\n      {error && <AlertError error={error} />}\n      <Spin spinning={fetching}>\n        <Form autoComplete='off' onFinish={onFinish}>\n          <input\n            type='email'\n            autoComplete='email'\n            value={email}\n            readOnly\n            style={{ display: 'none' }}\n          />\n          <Form.Item\n            name='password'\n            hasFeedback\n            rules={[\n              required('Please input a password!'),\n              passMinRule,\n            ]}\n          >\n            <Input.Password\n              size='large'\n              placeholder='New Password'\n              prefix={<LockOutlined />}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name='confirmPassword'\n            dependencies={['newPassword']}\n            hasFeedback\n            rules={[\n              required('Please confirm new password'),\n              passMinRule,\n              ({ getFieldValue }) => rulePass(getFieldValue, 'newPassword'),\n            ]}\n          >\n            <Input.Password\n              size='large'\n              placeholder='Confirm new password'\n              prefix={<LockOutlined />}\n            />\n          </Form.Item>\n\n          <Form.Item>\n            <Button\n              type='primary'\n              htmlType='submit'\n              className='session-form-button'\n            >\n              Submit\n            </Button>\n          </Form.Item>\n        </Form>\n      </Spin>\n    </div>\n  );\n};\n","import React from 'react';\nimport { notification } from 'antd';\n\nimport { useUserUpdatePasswordMutation } from 'graphql/generated';\nimport { PasswordUserForm, OnFinishArguments } from './Form';\n\ninterface PasswordFormProperties {\n  email: string;\n  userID: number;\n}\nconst PasswordForm: React.FC<PasswordFormProperties> = ({ email, userID }) => {\n  const [{ fetching, error }, updatePasword] = useUserUpdatePasswordMutation();\n\n  const onFinish = async ({ password }: OnFinishArguments) => {\n    const response = await updatePasword({ password, id: userID });\n    if (response.data) {\n      const { message, type } = response.data.userUpdatePassword.message;\n      notification[type]({ message });\n    }\n  };\n\n  return (\n    <PasswordUserForm {...{ email, fetching, onFinish, error }} />\n  );\n};\n\nexport default PasswordForm;\n","import React from 'react';\nimport { Row, Tabs } from 'antd';\n\nimport BasicForm from './BasicForm';\nimport { UserQuery } from 'graphql/generated';\nimport EmailForm from './Email';\nimport PasswordForm from './Password';\n\nconst { TabPane } = Tabs;\n\ninterface UserFormsProperties {\n  user: UserQuery['user'];\n}\n\nconst UserForms: React.FC<UserFormsProperties> = ({ user }) => (\n  <div>\n    <Row gutter={16}>\n      <Tabs defaultActiveKey='name' style={{ width: '100%' }}>\n        <TabPane\n          tab='Name'\n          key='name'\n        >\n          <BasicForm\n            userID={user.id}\n            firstName={user.firstName}\n            lastName={user.lastName}\n          />\n        </TabPane>\n        <TabPane\n          tab='Email'\n          key='email'\n        >\n          <EmailForm userID={user.id} email={user.email} />\n        </TabPane>\n        <TabPane\n          tab='Password'\n          key='password'\n        >\n          <PasswordForm email={user.email} userID={user.id} />\n        </TabPane>\n      </Tabs>\n    </Row>\n  </div>\n);\n\nexport default UserForms;\n","import React from 'react';\n\nimport { UserQuery } from 'graphql/generated';\nimport Roles from './ui/Roles';\nimport Forms from './ui/Forms';\nimport { userViewEnum } from './config';\n\ninterface UserContentProperties {\n  view: userViewEnum;\n  user: UserQuery['user'];\n}\n\nconst UserContent: React.FC<UserContentProperties> = ({ view, user }) => {\n  switch (true) {\n    case view === userViewEnum.roles: return <Roles user={user} />;\n    case view === userViewEnum.profile: return <Forms user={user} />;\n    default: throw new Error(`The view \"${view}\" for the user ${user.id} cannot be found`);\n  }\n};\n\nexport default UserContent;\n","import React from 'react';\nimport { Col, Divider, Row } from 'antd';\n\nimport UserTitle from 'ui/User/UserTitle';\nimport PageProperties from 'routes/PageProperties';\nimport { useUserQuery } from 'graphql/generated';\nimport NoDataUrql from 'ui/NoDataUrql';\nimport UserMenu from './Menu';\nimport UserContent from './UserContent';\nimport { getViewCode } from './config';\n\nexport interface UserRoute {\n  id: string;\n}\n\nconst User: React.FC<PageProperties<UserRoute>> = ({ route }) => {\n  const id = Number.parseInt(route.match.params.id, 10);\n  const [{ data, fetching, error }] = useUserQuery({ variables: { id } });\n\n  if (!data) {\n    return <NoDataUrql fetching={fetching} error={error} />;\n  }\n\n  const view = getViewCode(route.location.pathname, data.user.id);\n\n  return (\n    <div className='content-width'>\n      <UserTitle {...{\n        name: data.user.fullName,\n        emailVerified: data.user.emailVerified,\n        userStatusID: 'active',\n      }}\n      />\n      <Divider />\n      <Row gutter={16}>\n        <Col span={6}>\n          <UserMenu userID={data.user.id} view={view} />\n        </Col>\n        <Col span={18}>\n          <UserContent user={data.user} view={view} />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default User;\n","import React from 'react';\nimport {\n  CheckCircleFilled,\n  CheckCircleTwoTone,\n  ExclamationCircleFilled,\n  ExclamationCircleTwoTone,\n} from '@ant-design/icons';\n\ninterface AvailableIconProperties {\n  isAvailable: boolean;\n  isSelected?: boolean;\n}\nconst AvailableIcon: React.FC<AvailableIconProperties> = ({\n  isAvailable,\n  isSelected = false,\n}) => {\n  const colors = {\n    available: '#52c41a',\n    missing: '#eb2f96',\n  };\n  if (isSelected) {\n    if (isAvailable) {\n      return <CheckCircleFilled style={{ color: colors.available }} />;\n    }\n    return <ExclamationCircleFilled style={{ color: colors.missing }} />;\n  }\n  if (isAvailable) {\n    return <CheckCircleTwoTone twoToneColor={colors.available} />;\n  }\n  return <ExclamationCircleTwoTone twoToneColor={colors.missing} />;\n};\n\nexport default AvailableIcon;\n","import React from 'react';\n\nimport { ColumnTableProperties } from '../base/ColumnTableProperties';\nimport TableColumnAbstract from '../base/TableColumnAbstract';\nimport AvailableIcon from './AvailableIcon';\n\ninterface VText {\n  langID: string;\n  originalLangID: string;\n}\n\ninterface LangColumnProperties<T> extends ColumnTableProperties {\n  indexID: keyof T;\n  langID: string;\n  langIDGlobal: string;\n}\nconst isAvaliable = (texts: VText[], langID: string) => {\n  // eslint-disable-next-line unicorn/no-for-loop\n  for (let index = 0; index < texts.length; index += 1) {\n    const text = texts[index];\n    if (text.originalLangID === langID) { return true; }\n  }\n  return false;\n};\n\nexport default class LangColumn<T> implements TableColumnAbstract {\n  public readonly column: ColumnTableProperties;\n\n  constructor(properties: LangColumnProperties<T>) {\n    const { indexID, langID, langIDGlobal, ...props } = properties;\n    this.column = {\n      title: langID,\n      className: `fit-center-column lang lang_id-${langID}`,\n      ...props,\n      render: (_: string, data: T) => {\n        const texts = data[indexID] as unknown as VText[];\n        const isAvailable = isAvaliable(texts, langID);\n        return <AvailableIcon isAvailable={isAvailable} isSelected={langID === langIDGlobal} />;\n      },\n    };\n  }\n}\n","import React, { useState } from 'react';\nimport { Spin, Table, Input } from 'antd';\nimport { TablePaginationConfig } from 'antd/lib/table';\nimport { Key, SorterResult } from 'antd/lib/table/interface';\n\nimport { Pagination } from 'graphql/generated';\nimport TableColumns from 'util/columns/base/TableColumns';\nimport { IDColumn, DeleteColumn, TextColumn, OnSelectColumn } from 'util/columns';\nimport PaginationUI from 'ui/Pagination';\nimport { ColumnTableProperties } from 'util/columns/base/ColumnTableProperties';\nimport getLangColumns from 'util/columns/Langs/LangsColumn';\n\ninterface Translation {\n  id: number;\n  code?: string;\n  isBlocked?: boolean;\n  text: {\n    text: string;\n    langID: string;\n    originalLangID: string;\n  }\n  texts: {\n    langID: string;\n    originalLangID: string;\n  }[]\n}\n\ninterface LangProperties {\n  langID: string;\n}\n\ninterface PaginationArguments {\n  page: number;\n  limit: number;\n}\ninterface OrderByArguments {\n  orderBy: string;\n  order: 'ASC' | 'DESC';\n}\n\ninterface TranslationFetchMore extends PaginationArguments {\n  search?: string;\n  order?: OrderByArguments;\n  langID?: string;\n}\n\ninterface TranslationsTableProperties {\n  translations: Translation[];\n  langs: LangProperties[];\n  langID: string;\n  loading?: boolean;\n  pagination: Pagination;\n  fetchMore: (parameters: TranslationFetchMore) => void;\n  getLink?: (translation: Translation) => string;\n  onSelect?: (data: Translation, index: number) => void;\n  onSelectLink?: (data: Translation, index: number) => void;\n  onDelete?: (item: Translation, index: number) => void;\n}\n\nconst TranslationsTable: React.FC<TranslationsTableProperties> = ({\n  translations,\n  langs,\n  langID,\n  loading = false,\n  pagination,\n  fetchMore,\n  getLink,\n  onSelect,\n  onSelectLink,\n  onDelete,\n}) => {\n  const [search, setSearch] = useState('');\n\n  const tableColumns = new TableColumns([\n    new IDColumn<Translation>({ indexID: 'id', orderBy: 'translation.translation_id' }),\n    new TextColumn<Translation>({ indexID: 'text', title: 'Text', getLink, onSelectLink }),\n    ...getLangColumns('texts', langs, langID),\n  ]);\n  if (onSelect) {\n    tableColumns.append(new OnSelectColumn<Translation>({ indexID: 'id', onSelect }));\n  }\n  if (onDelete) {\n    tableColumns.append(new DeleteColumn({ onDelete }));\n  }\n  const columns = tableColumns.getColumns();\n\n  const onChangeTable = (\n    _pagination: TablePaginationConfig,\n    _filters: Record<string, (Key | boolean)[] | null>,\n    sorter: SorterResult<Translation> | SorterResult<Translation>[],\n  ) => {\n    if (Array.isArray(sorter)) { return; }\n    if (!sorter.column) {\n      fetchMore({\n        page: pagination.page,\n        limit: pagination.limit,\n        search,\n      });\n    } else {\n      const column = sorter.column as ColumnTableProperties;\n      const order = (sorter.order === 'ascend') ? 'ASC' : 'DESC';\n      const columnOrder = column.orderBy\n        ? {\n          orderBy: column.orderBy,\n          order,\n        } as OrderByArguments : undefined;\n      fetchMore({\n        page: 1,\n        limit: pagination.limit,\n        order: columnOrder,\n        search,\n      });\n    }\n  };\n\n  const onSearch = (value: string) => {\n    fetchMore({\n      page: 1,\n      limit: pagination.limit,\n      search: value,\n    });\n  };\n\n  return (\n    <div className='table-view'>\n      <Spin spinning={loading}>\n        <Input.Search\n          placeholder='Search by Text or ID'\n          onSearch={onSearch}\n          enterButton\n          value={search}\n          onChange={(event) => setSearch(event.target.value)}\n        />\n        <PaginationUI\n          pagination={pagination}\n          onChange={(page, limit) => fetchMore({ page, limit })}\n          small\n        />\n        <Table\n          columns={columns}\n          dataSource={translations}\n          pagination={false}\n          onChange={onChangeTable}\n          rowKey={(translation) => translation.id}\n        />\n        <PaginationUI\n          pagination={pagination}\n          onChange={(page, limit) => fetchMore({ page, limit, search })}\n        />\n      </Spin>\n    </div>\n  );\n};\n\nexport default TranslationsTable;\n","export enum RouteTypeEnum {\n  private = 'private',\n  public = 'public',\n  session= 'session',\n}\n\nexport const isPrivate = (routeType: RouteTypeEnum): boolean => (routeType === RouteTypeEnum.private);\nexport const isSession = (routeType: RouteTypeEnum): boolean => (routeType === RouteTypeEnum.session);\nexport const isPublic = (routeType: RouteTypeEnum): boolean => (routeType === RouteTypeEnum.public);\n","import LangColumn from './LangColumn';\n\ninterface LangProperties {\n  langID: string;\n}\n\nexport default function getLangColumns<T>(indexID: keyof T, langs: LangProperties[], langIDGlobal: string) {\n  const columns: LangColumn<T>[] = [];\n  langs.forEach(({ langID }) => columns.push(new LangColumn({ indexID, langID, langIDGlobal })));\n  return columns;\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface ButtonLinkProperties {\n  link: string;\n  title?: React.ReactNode;\n}\nconst ButtonLink: React.FC<ButtonLinkProperties> = ({ link, title = 'Add new' }) => (\n  <Button className='button-right' type='primary'>\n    <Link to={`${link}`}>\n      {title}\n    </Link>\n  </Button>\n);\n\nexport default ButtonLink;\n","import React, { useCallback, useContext, useState } from 'react';\nimport Title from 'antd/lib/typography/Title';\nimport { FormattedMessage } from 'react-intl';\nimport { notification } from 'antd';\n\nimport { useTranslationsQuery, useTranslationDeleteMutation } from 'graphql/generated';\nimport AlertError, { getErrors } from 'ui/Alert/AlertError';\nimport NoDataUrql from 'ui/NoDataUrql';\nimport PageProperties from 'routes/PageProperties';\nimport TranslationTable from 'ui/Translation/Table';\nimport { GlobalContext } from 'use/global';\nimport ButtonLink from 'ui/Buttons/ButtonLink';\n\nconst Translations: React.FC<PageProperties> = ({ route }) => {\n  const { langs, langID } = useContext(GlobalContext);\n  const [limit, setLimit] = useState<number>(10);\n  const [page, setPage] = useState<number>(1);\n  const [search, setSearch] = useState<string>();\n  const [order, setOrder] = useState<string>();\n  const [orderBy, setOrderBy] = useState<string>();\n  const [{ data, fetching, error }] = useTranslationsQuery(\n    { variables: { limit, page, search, order, orderBy } },\n  );\n\n  const [{ fetching: deletingFetching }, onDeleteTranslation] = useTranslationDeleteMutation();\n\n  const onDelete = useCallback(async (id: number) => {\n    const response = await onDeleteTranslation({ id });\n    if (response.data) {\n      const { message, type } = response.data.translationDelete;\n      notification[type]({ message });\n    }\n    if (response.error) {\n      notification.error({ message: getErrors(response.error) });\n    }\n  }, [onDeleteTranslation]);\n\n  if (!data) {\n    return <NoDataUrql fetching={fetching} error={error} />;\n  }\n\n  return (\n    <div>\n      <div className='title'>\n        <Title level={1}>\n          <FormattedMessage id='translation.translations' />\n        </Title>\n        <ButtonLink link={`${route.location.pathname}/add`} />\n      </div>\n      {error && <AlertError error={error} />}\n      <TranslationTable\n        langID={langID}\n        langs={langs}\n        loading={fetching || deletingFetching}\n        translations={data.translations.data}\n        onDelete={(item) => onDelete(item.id)}\n        getLink={(translation) => `${route.location.pathname}/${translation.id}`}\n        pagination={data.translations.pagination}\n        fetchMore={({ page: page_, limit: limit_, search: search_, order: order_ }) => {\n          setLimit(limit_);\n          setPage(page_);\n          setSearch(search_);\n          if (order_) {\n            setOrder(order_.order);\n            setOrderBy(order_.orderBy);\n          }\n        }}\n      />\n    </div>\n  );\n};\n\nexport default Translations;\n","import { FormattedMessage } from 'react-intl';\nimport { Button, Checkbox, Form, Input, Spin } from 'antd';\nimport React, { useCallback } from 'react';\nimport { CombinedError } from 'urql';\n\nimport { LangEnum } from 'use/global/useIntl';\nimport NoDataUrql from 'ui/NoDataUrql';\nimport { TranslationCreateProperties } from './TranslationFormInterfaces';\n\ninterface LangProperties {\n  id: string;\n}\n\ninterface VText {\n  text: string;\n  langID: string;\n  originalLangID: string;\n}\ninterface Translation {\n  code: string;\n  isBlocked: boolean;\n  texts: VText[]\n}\n\ntype FormArguments = {\n  code: string;\n  isBlocked: boolean;\n} & {\n  [key: string]: string\n};\n\ninterface TranslationFormProperties {\n  translation?: Translation;\n  onFinish: (values: TranslationCreateProperties) => void;\n  fetching: boolean;\n  error?: CombinedError;\n  langs: LangProperties[];\n}\n\nconst onFinishInternal = (values: FormArguments) => {\n  const { code, isBlocked, ...langs } = values;\n  const createValues: TranslationCreateProperties = { code, isBlocked, texts: [] };\n  Object.keys(langs).forEach((langID) => {\n    createValues.texts.push({\n      langID,\n      text: langs[langID],\n    });\n  });\n  return createValues;\n};\n\nexport const getTexts = (texts: VText[]) => {\n  const translations: { [key: string]: string } = {};\n  // eslint-disable-next-line no-restricted-syntax\n  for (const text of texts) {\n    const originalText = (text.originalLangID === text.langID) ? text.text : '';\n    const langID = text.langID as LangEnum;\n    translations[langID] = originalText;\n  }\n  return translations;\n};\n\nconst TranslationForm: React.FC<TranslationFormProperties> = ({\n  translation,\n  fetching,\n  error,\n  onFinish,\n  langs,\n}) => {\n  const langsTexts = translation ? getTexts(translation.texts) : {};\n  const initialValues = { ...translation, ...langsTexts };\n  const [form] = Form.useForm();\n  const submitEnter = useCallback((event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter') {\n      event.preventDefault();\n      form.submit();\n    }\n  }, [form]);\n\n  return (\n    <Spin spinning={fetching}>\n      {(fetching || error) && <NoDataUrql fetching={fetching} error={error} />}\n      <Form\n        layout='vertical'\n        onFinish={(values) => onFinish(onFinishInternal(values))}\n        initialValues={initialValues}\n        form={form}\n      >\n        <Form.Item\n          name='isBlocked'\n          valuePropName='checked'\n        >\n          <Checkbox>\n            <FormattedMessage id='generic.blocked' />\n          </Checkbox>\n        </Form.Item>\n        {\n          langs.map((lang) => {\n            let required = {};\n            if (lang.id === 'EN') {\n              required = {\n                required: true,\n                message: `This ${lang.id} translations is required`,\n              };\n            }\n            return (\n              <Form.Item\n                className='form-item'\n                name={lang.id}\n                label={lang.id}\n                key={lang.id}\n                rules={[required]}\n              >\n                <Input.TextArea\n                  rows={1}\n                  autoSize\n                  onKeyDown={submitEnter}\n                />\n              </Form.Item>\n            );\n          })\n        }\n        <Form.Item\n          className='form-item'\n          name='code'\n          label='Code'\n        >\n          <Input disabled={translation?.isBlocked} />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type='primary'\n            htmlType='submit'\n            className='session-form-button'\n            disabled={fetching}\n          >\n            <FormattedMessage id='generic.submit' />\n          </Button>\n        </Form.Item>\n      </Form>\n    </Spin>\n  );\n};\n\nexport default TranslationForm;\n","import { RoutePropertiesParameters } from '../interfaces';\nimport Profile from '../../pages/Admin/Profile';\nimport Users from '../../pages/Admin/Users';\nimport User from '../../pages/Admin/Users/User';\nimport Translations from '../../pages/Admin/Translations';\nimport Translation from '../../pages/Admin/Translations/Translation';\nimport TranslationAdd from '../../pages/Admin/Translations/Translation/Add';\n\nconst id = 'required|integer|min:1';\n\nconst routes: RoutePropertiesParameters[] = [\n  {\n    component: Users,\n    exact: true,\n    path: '/admin/users',\n  },\n  {\n    component: User,\n    path: '/admin/users/:id',\n    params: { id },\n  },\n  {\n    component: User,\n    path: '/admin/users/:id/roles',\n    params: { id },\n  },\n  {\n    component: Profile,\n    exact: true,\n    path: '/admin/profile',\n  },\n  {\n    component: Translations,\n    exact: true,\n    path: '/admin/translations',\n  },\n  {\n    component: TranslationAdd,\n    exact: true,\n    path: '/admin/translations/add',\n  },\n  {\n    component: Translation,\n    exact: true,\n    path: '/admin/translations/:id',\n    params: { id },\n  },\n];\n\nexport default routes;\n","import { RoutePropertiesParameters } from '../interfaces';\nimport admin from './admin';\n\nconst routes: RoutePropertiesParameters[] = admin;\n\nexport default routes;\n","import React, { useCallback } from 'react';\nimport Title from 'antd/lib/typography/Title';\nimport { FormattedMessage } from 'react-intl';\nimport { notification } from 'antd';\n\nimport PageProperties from 'routes/PageProperties';\nimport { useLangsQuery, useTranslationCreateMutation } from 'graphql/generated';\nimport NoDataUrql from 'ui/NoDataUrql';\nimport TranslationForm from '../Form/TranslationForm';\nimport AlertError from 'ui/Alert/AlertError';\n\nconst Translation: React.FC<PageProperties> = ({ route }) => {\n  const [{ data: langs, fetching: langsFetching, error: langsError }] = useLangsQuery();\n  const [{ fetching: creating, error: updateError }, create] = useTranslationCreateMutation();\n\n  const onCreate = useCallback(async (values) => {\n    const response = await create(values);\n    if (response.data) {\n      const { message, type } = response.data.translationCreate.message;\n      notification[type]({ message });\n      const URL = route.location.pathname.replace('add', '');\n      const newUrl = `${URL}${response.data.translationCreate.data.id}`;\n      route.history.replace(newUrl);\n    }\n  }, [route.history, route.location.pathname, create]);\n\n  if (!langs) {\n    return <NoDataUrql fetching={langsFetching} error={langsError} />;\n  }\n\n  return (\n    <div>\n      <Title level={1}>\n        <FormattedMessage id='translation.updateTranslation' />\n      </Title>\n      {langsError && <AlertError error={langsError} />}\n      <TranslationForm\n        fetching={creating}\n        error={updateError}\n        onFinish={onCreate}\n        langs={langs.langs.data}\n      />\n    </div>\n  );\n};\n\nexport default Translation;\n","import React, { useCallback } from 'react';\nimport Title from 'antd/lib/typography/Title';\nimport { FormattedMessage } from 'react-intl';\nimport { notification } from 'antd';\n\nimport PageProperties from 'routes/PageProperties';\nimport { useTranslationQuery, useLangsQuery, useTranslationUpdateMutation } from 'graphql/generated';\nimport NoDataUrql from 'ui/NoDataUrql';\nimport TranslationForm from './Form/TranslationForm';\nimport AlertError from 'ui/Alert/AlertError';\n\nexport interface TranslationRoute {\n  id: string;\n}\n\nconst Translation: React.FC<PageProperties<TranslationRoute>> = ({ route }) => {\n  const id = Number.parseInt(route.match.params.id, 10);\n  const [{ data, fetching, error }] = useTranslationQuery({ variables: { id } });\n  const [{ data: langs, fetching: langsFetching, error: langsError }] = useLangsQuery();\n  const [{ fetching: updating, error: creatingError }, update] = useTranslationUpdateMutation();\n\n  const onUpdate = useCallback(async (values) => {\n    const response = await update(values);\n    if (response.data) {\n      const { message, type } = response.data.translationUpdate.message;\n      notification[type]({ message });\n    }\n  }, [update]);\n\n  if (!data) {\n    return <NoDataUrql fetching={fetching} error={error} />;\n  }\n\n  if (!langs) {\n    return <NoDataUrql fetching={langsFetching} error={langsError} />;\n  }\n\n  return (\n    <div>\n      <Title level={1}>\n        <FormattedMessage id='translation.updateTranslation' />\n      </Title>\n      {error && <AlertError error={error} />}\n      {langsError && <AlertError error={langsError} />}\n      <TranslationForm\n        translation={data.translation}\n        fetching={updating}\n        error={creatingError}\n        onFinish={(values) => onUpdate({ ...values, id })}\n        langs={langs.langs.data}\n      />\n    </div>\n  );\n};\n\nexport default Translation;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nconst Index: React.FC = () => (\n  <div>\n    <Typography.Title>\n      Welcome to the Private Area\n    </Typography.Title>\n    <Typography.Paragraph>\n      Hello there, this is the private area.\n    </Typography.Paragraph>\n  </div>\n);\n\nexport default Index;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nconst Index: React.FC = () => (\n  <div>\n    <Typography.Title>\n      Welcome to the Public Area\n    </Typography.Title>\n    <Typography.Paragraph>\n      Hello there, this is the public area. Please just click in Login,\n      in order to see the private area.\n    </Typography.Paragraph>\n  </div>\n);\n\nexport default Index;\n","import React, { useContext } from 'react';\n\nimport PageProperties from 'routes/PageProperties';\nimport UserContext from 'use/user/UserContext';\nimport Private from './Private';\nimport Public from './Public';\n\nconst Index: React.FC<PageProperties> = () => {\n  const { user } = useContext(UserContext);\n  if (user) return <Private />;\n  return <Public />;\n};\nexport default Index;\n","import React from 'react';\nimport { Typography } from 'antd';\n\nimport PageProperties from 'routes/PageProperties';\n\nconst { Paragraph, Title } = Typography;\n\nconst AboutMe: React.FC<PageProperties> = () => (\n  <div>\n    <Title>\n      About Me\n    </Title>\n    <Paragraph>\n      I&#39;m a Computer Engineer based in Boston, MA\n      specializing in building delightful websites,\n      applications, and everything in between.\n      I have 5+ years of experience in web development,\n      and a solid understanding of web and server infrastructure.\n    </Paragraph>\n    <Paragraph>\n      Please visit me at:\n      {' '}\n      <a href='https://albertcito.com'>www.albertcito.com</a>\n    </Paragraph>\n  </div>\n);\nexport default AboutMe;\n","import Index from '../../pages/Index';\nimport AboutMe from '../../pages/AboutMe';\nimport { RoutePropertiesParameters } from '../interfaces';\n\nconst routes: RoutePropertiesParameters[] = [\n  {\n    component: Index,\n    exact: true,\n    path: '/',\n  },\n  {\n    component: AboutMe,\n    exact: true,\n    path: '/about-me',\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport { InboxOutlined, LockOutlined } from '@ant-design/icons';\nimport { Button, Form, Input, Spin, notification } from 'antd';\nimport { CombinedError } from '@urql/core';\n\nimport AlertError from 'ui/Alert/AlertError';\n\nconst onClick = () => notification.info({\n  message: 'To be implemented',\n  description: 'This feature will be implemented ASAP.',\n});\n\ntype onLoginType = (email: string, password: string) => void;\ninterface LoginFormProperties {\n  doLogin: onLoginType;\n  fetching: boolean;\n  error?: CombinedError;\n}\n\nconst LoginForm: React.FC<LoginFormProperties> = ({ doLogin, fetching, error }) => {\n  const onSubmit = ({ email, password }: {\n    email: string;\n    password: string;\n  }) => {\n    doLogin(email, password);\n  };\n\n  const initialValues = { email: 'admin@albertcito.com', password: 'Hola12345' };\n\n  return (\n    <Spin spinning={fetching}>\n      <div className='modal session-form'>\n        <h2 className='modal-title'>\n          Login\n        </h2>\n        {error && <AlertError error={error} />}\n        <Form onFinish={onSubmit} initialValues={initialValues}>\n          <Form.Item\n            name='email'\n            rules={[\n              {\n                required: true,\n                message: 'Please input your email',\n              },\n              {\n                type: 'email',\n                message: 'The input is not valid E-mail',\n              },\n            ]}\n            hasFeedback\n          >\n            <Input\n              autoComplete='email'\n              placeholder='Email'\n              size='large'\n              type='email'\n              prefix={<InboxOutlined />}\n            />\n          </Form.Item>\n\n          <Form.Item\n            name='password'\n            rules={[{\n              required: true,\n              message: 'Please input your password',\n            }]}\n            hasFeedback\n          >\n            <Input.Password\n              autoComplete='password'\n              size='large'\n              placeholder='Password'\n              prefix={<LockOutlined />}\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type='primary'\n              htmlType='submit'\n              className='session-form-button'\n            >\n              Submit\n            </Button>\n            <Button type='link' className='login-form-forgot' onClick={onClick}>\n              Forgot Password\n            </Button>\n          </Form.Item>\n        </Form>\n        <p className='session-form-already'>\n          Don&#39;t have an account?\n          {' '}\n          <Button type='link' className='link-button' onClick={onClick}>\n            <b>Singup</b>\n          </Button>\n        </p>\n      </div>\n    </Spin>\n  );\n};\n\nexport default LoginForm;\n","import Login from '../pages/Login';\nimport { RoutePropertiesParameters } from './interfaces';\n\nconst routes: RoutePropertiesParameters[] = [\n  {\n    component: Login,\n    exact: true,\n    path: '/login',\n  },\n];\n\nexport default routes;\n","import React, { useContext } from 'react';\n\nimport { GlobalContext } from 'use/global';\nimport LoginForm from './LoginForm';\nimport PageProperties from 'routes/PageProperties';\n\nconst Login: React.FC<PageProperties> = () => {\n  const { login: { doLogin, error, fetching } } = useContext(GlobalContext);\n\n  return (\n    <div style={{ maxWidth: 450, margin: '0 auto' }}>\n      <LoginForm {...{ doLogin, fetching, error }} />\n    </div>\n  );\n};\n\nexport default Login;\n","import { GlobalLayout } from 'templates';\nimport privateRoutes from './private';\nimport publicRoutes from './public';\nimport sessionRoutes from './session';\nimport { RouteTypeEnum } from './routeTypes';\nimport { RouteTemplateProperties } from './interfaces';\n\nconst routesTemplate: RouteTemplateProperties[] = [\n  {\n    routes: publicRoutes,\n    template: GlobalLayout,\n    type: RouteTypeEnum.public,\n  },\n  {\n    routes: privateRoutes,\n    template: GlobalLayout,\n    type: RouteTypeEnum.private,\n  },\n  {\n    routes: sessionRoutes,\n    template: GlobalLayout,\n    type: RouteTypeEnum.session,\n  },\n];\nexport default routesTemplate;\n","export default __webpack_public_path__ + \"static/media/error500.423bdbe3.svg\";","export default __webpack_public_path__ + \"static/media/error404.8a4510fe.svg\";","import error500 from './error500.svg';\nimport error404 from './error404.svg';\nimport error403 from './error403.svg';\n\nconst config = {\n  403: {\n    desc: 'Not authorized',\n    img: error403,\n    title: '403',\n  },\n  404: {\n    desc: 'Not Found',\n    img: error404,\n    title: '404',\n  },\n  500: {\n    desc: 'Error',\n    img: error500,\n    title: '500',\n  },\n};\n\nexport default config;\n","export default __webpack_public_path__ + \"static/media/error403.3ec9d90d.svg\";","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport config from './config';\nimport './index.scss';\n\ninterface ExceptionProperties {\n  type: 403 | 404 | 500;\n  title: string;\n  desc: string;\n  actions: React.ReactNode;\n}\n\nconst Exception:React.FC<ExceptionProperties> = ({ type, title, desc, actions }) => {\n  const error = config[type];\n  return (\n    <Row className='exception-page' justify='center'>\n      <Col className='exception-page-img' xs={24} sm={12} md={12} lg={15} xl={15}>\n        <img\n          src={error.img}\n          alt={error.title}\n        />\n      </Col>\n      <Col className='exception-page-content' xs={24} sm={12} md={12} lg={9} xl={9}>\n        <h1>{title || error.title}</h1>\n        <div className='exception-page-desc'>{desc || error.desc}</div>\n        <div>\n          {actions}\n        </div>\n      </Col>\n    </Row>\n  );\n};\n\nexport default Exception;\n","import { Button } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Exception from './Exception';\nimport './index.scss';\n\nexport default function Error403() {\n  const actions = (\n    <div>\n      <Link to='/'>\n        <Button type='primary'>\n          Back to Home\n        </Button>\n      </Link>\n    </div>\n  );\n\n  return (\n    <div className='content-width page-error'>\n      <Exception\n        type={404}\n        title=\"We're Sorry!\"\n        desc='We can’t find the page you were trying to reach'\n        actions={actions}\n      />\n    </div>\n  );\n}\n","import { Button } from 'antd';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Exception from './Exception';\nimport './index.scss';\n\nexport default function Error403() {\n  const actions = (\n    <div>\n      <Link to='/'>\n        <Button type='primary'>\n          Back to Home\n        </Button>\n      </Link>\n    </div>\n  );\n\n  return (\n    <div className='content-width page-error'>\n      <Exception\n        type={403}\n        title='Private'\n        desc='This is a private area, you are not authorize to see it'\n        actions={actions}\n      />\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { RouteComponentProps, Redirect } from 'react-router-dom';\nimport { Spin } from 'antd';\nimport Validator from 'validatorjs';\n\nimport { RoutePropertiesParameters } from 'routes/interfaces';\nimport { isPrivate, RouteTypeEnum, isSession } from 'routes/routeTypes';\nimport { GlobalLayout } from 'templates/';\nimport { Error403, Error404 } from 'templates/errors';\nimport LayoutPageProperties from 'templates/interfaces/LayoutPageProperties';\nimport { GlobalContext } from 'use/global';\nimport UserContext from 'use/user/UserContext';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface AuthProperties<T = any> {\n  route: RoutePropertiesParameters;\n  Template: React.FC<LayoutPageProperties>;\n  reactRouter: RouteComponentProps<T>;\n  type: RouteTypeEnum;\n}\nconst Auth: React.FC<AuthProperties> = ({ route, Template, reactRouter, type }) => {\n  const { user } = useContext(UserContext);\n  const {\n    sessions: { fetching },\n    logout: { fetching: logoutLoading },\n  } = useContext(GlobalContext);\n\n  if (fetching) {\n    return <>...loading</>;\n  }\n\n  if (isPrivate(type) && !user) {\n    return <GlobalLayout Component={Error403} route={reactRouter} />;\n  }\n  if (isSession(type) && user) {\n    return <Redirect to='/' />;\n  }\n\n  if (route.params && (new Validator(reactRouter.match.params, route.params)).fails()) {\n    return <GlobalLayout Component={Error404} route={reactRouter} />;\n  }\n\n  const Layout = route.template ?? Template;\n  return (\n    <Spin spinning={logoutLoading}>\n      <Layout\n        Component={route.component}\n        route={reactRouter}\n      />\n    </Spin>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport {\n  Route,\n  Switch,\n  HashRouter,\n} from 'react-router-dom';\n\nimport routesTemplates from 'routes';\nimport { GlobalLayout } from 'templates';\nimport { Error404 } from 'templates/errors';\nimport Auth from './Auth';\n\n// use BrowserRouter instead HashRouter to remove #\nconst Routes: React.FC = () => (\n  <HashRouter>\n    <Switch>\n      {\n      routesTemplates.map((routesTemplate) => {\n        const { routes, template: Template, type } = routesTemplate;\n        return routes.map((route) => (\n          <Route\n            exact={route.exact}\n            path={route.path}\n            key={route.path}\n            render={(reactRouter) => (\n              <Auth\n                route={route}\n                Template={Template}\n                reactRouter={reactRouter}\n                type={type}\n              />\n            )}\n          />\n        ));\n      })\n    }\n      <Route\n        render={(route) => (\n          <GlobalLayout\n            Component={Error404}\n            route={route}\n          />\n        )}\n      />\n    </Switch>\n  </HashRouter>\n);\n\nexport default Routes;\n","export default {\n  appName: 'Albertcito.com React Project',\n  appVersion: '0.0.1',\n  urlServer: process.env.REACT_APP_URL_SERVER,\n};\n","/* eslint-disable unicorn/no-null */\nimport { cacheExchange as cacheExchangeURQL } from '@urql/exchange-graphcache';\n\nconst cacheExchange = cacheExchangeURQL({\n  keys: {\n    LangPaginationResponse: () => null,\n    Pagination: () => null,\n    TranslationPaginationResponse: () => null,\n    UserPaginationResponse: () => null,\n  },\n  updates: {\n    Mutation: {\n      translationDelete: (_result, _arguments, cache) => {\n        const allFields = cache.inspectFields('Query');\n        const translationsQueries = allFields.filter((x) => x.fieldName === 'translations');\n        translationsQueries.forEach(({ fieldName, arguments: variables }) => {\n          cache.invalidate('Query', fieldName, variables ?? undefined);\n        });\n      },\n      translationUpdate: (_result, { id }, cache) => {\n        if (typeof id === 'number') {\n          cache.invalidate({ __typename: 'Translation', id });\n        }\n      },\n      translationCreate: (_result, _arguments, cache) => {\n        // https://formidable.com/open-source/urql/docs/graphcache/custom-updates/#cacheinspectfields\n        const allFields = cache.inspectFields('Query');\n        const translationsQueries = allFields.filter((x) => x.fieldName === 'translations');\n        translationsQueries.forEach(({ fieldName, arguments: variables }) => {\n          cache.invalidate('Query', fieldName, variables ?? undefined);\n        });\n      },\n    },\n  },\n});\n\nexport default cacheExchange;\n","import {\n  createClient,\n  dedupExchange,\n  fetchExchange,\n  errorExchange,\n  CombinedError,\n} from 'urql';\nimport { devtoolsExchange } from '@urql/devtools';\n\nimport constants from 'config/constants';\nimport storage from 'util/Storage';\nimport cacheExchange from './cacheExchange';\n\nconst onError = (error: CombinedError) => {\n  if (error.response?.status === 401) {\n    storage.logout();\n    /**\n    * TO DO:\n    * - Reset all the cache and global status.\n    * - Remove user from global session -> It will display private area.\n    * - Remove redirect.\n    */\n    window.location.href = '/';\n  }\n};\n\nconst client = () => createClient({\n  url: `${constants.urlServer}/graphql`,\n  fetchOptions: () => {\n    const token = storage.getToken();\n    return {\n      headers: { authorization: token ? `Bearer ${token}` : '' },\n      withCredentials: true,\n    };\n  },\n  exchanges: [\n    devtoolsExchange,\n    dedupExchange,\n    cacheExchange,\n    errorExchange({ onError }),\n    fetchExchange,\n  ],\n});\n\nexport default client;\n","import React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { Provider as URQLProvider } from 'urql';\n\nimport { GlobalContext, useGlobal } from 'use/global';\nimport Routes from './Routes';\nimport UserContext, { useUser } from 'use/user/UserContext';\nimport getURQLClient from './urql/getURQLClient';\n\nconst GlobalStatus: React.FC = () => {\n  const global = useGlobal();\n  return (\n    <GlobalContext.Provider value={global}>\n      <IntlProvider\n        locale={global.intl.lang}\n        messages={global.intl.messages}\n        defaultLocale={global.intl.defaultLocale}\n      >\n        <Routes />\n      </IntlProvider>\n    </GlobalContext.Provider>\n  );\n};\n\nconst urql = getURQLClient();\nconst StartApp: React.FC = () => {\n  const { setUser, ...props } = useUser();\n  return (\n    <UserContext.Provider value={{ ...props, setUser }}>\n      <URQLProvider value={urql}>\n        <GlobalStatus />\n      </URQLProvider>\n    </UserContext.Provider>\n  );\n};\n\nexport default StartApp;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport StartApp from './start/StartApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StartApp />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}